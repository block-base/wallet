{"version":3,"sources":["contexts/index.ts","hooks/index.ts","components/atoms/Container.tsx","components/atoms/Layout.tsx","components/atoms/Section.tsx","components/molecules/Credential.tsx","screens/HomeScreen.tsx","screens/ResponseScreen.tsx","screens/CredentialScreen.tsx","screens/ScannerScreen.tsx","navigation/index.tsx","App.tsx","web-build/register-service-worker.js","polyfills/global.ts","modules/index.ts"],"names":["WalletContext","React","ScreenContext","appendCorsAnywhere","os","url","initializeApp","privateKeyState","setPrivateKeyState","screenState","setScreenState","useFonts","NotoSansJP_400Regular","NotoSansJP_700Bold","isFontsLoaded","a","async","AsyncStorage","getItem","privateKey","generatePrivateKey","setItem","loadPrivateKeyAsync","Linking","initialUrl","queryParams","Object","keys","length","request_uri","axios","get","Platform","OS","requestResponse","request","data","decodedRequest","jwt","decode","JSON","stringify","prompt","manifestUri","presentation_definition","input_descriptors","issuance","manifest","manifestResponse","loadScreenAsync","initializeHome","vcState","setVcState","vcString","vc","parse","props","View","children","style","tailwind","backgroundColor","size","Image","source","uri","icon","Text","color","textColor","title","issuedBy","navigation","detail","key","navigate","Layout","centerComponent","text","onPress","window","location","href","split","rightComponent","Container","Cards","map","index","card","Credential","logo","Section","qs","require","wallet","modeState","setModeState","requestState","setRequestState","manifestState","setManifestState","presentaionManifestState","setPresentaionManifestState","idTokenState","setIdTokenState","manifestString","code","input","attestations","idTokens","configuration","openIdConfigurationResponse","openIdConfiguration","token_endpoint","tokenResponse","idToken","id_token","presentations","contracts","presentationManifestResponse","presentationManifest","mode","requestString","schema","credentialType","initializeResponse","leftComponent","display","hostname","Title","Divider","type","disabled","openIdConfigurationUri","client_id","authorizationUri","authorization_endpoint","authenticate","payload","aud","credentialIssuer","contract","selfIssuedIdToken","siop","post","headers","vcResponse","original","parsed","redirect_uri","nonce","state","route","params","cardOne","subject","credentialSubject","flex","flexDirection","justifyContent","BarCodeScanner","onBarCodeScanned","console","log","StyleSheet","absoluteFillObject","onError","err","onScan","Stack","createStackNavigator","NavigationContainer","Navigator","screenOptions","headerShown","initialRouteName","Screen","name","component","HomeScreen","ResponseScreen","CredentialScreen","ScannerScreen","Wallet","Provider","value","StatusBar","AppLoading","navigator","addEventListener","serviceWorker","register","scope","then","info","catch","error","global","Buffer","constants","methodName","publicKeyType","keyId","header","alg","iss","iat","exp","kty","crv","fc","pre","base64url","unencoded","from","toString","replace","encoded","multihash","digest","crypto","createHash","update","prefix","concat","randomBytes","options","jti","kid","did","sub_jwk","publicKeyJwk","sign","pem","asn1","asn1Base64","privateKeyToPem","encodedHeader","encodedPayload","message","createSign","this","privateKeyBuffer","ecdh","createECDH","setPrivateKey","pub","getPublicKey","x","slice","y","privateKeyJwk","d","privateKeyToJwk","id","canonical_jwk","commitment_hash","patches","action","document","public_keys","jwk","purpose","canonical_delta","update_commitment","delta","delta_hash","canonical_suffix_data","recovery_commitment","didUniqueSuffix","suffix_data","publicKeyJwkToIonDid"],"mappings":"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","file":"static/js/app.63298378.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Wallet } from \"../modules\";\nexport const WalletContext = React.createContext<Wallet | null>(null);\nexport const ScreenContext = React.createContext<string | null>(null);\n","import * as Linking from \"expo-linking\";\nimport {\n  useFonts,\n  NotoSansJP_400Regular,\n  NotoSansJP_700Bold,\n} from \"@expo-google-fonts/noto-sans-jp\";\nimport * as React from \"react\";\nimport { Platform } from \"react-native\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nimport axios from \"axios\";\n\nimport { generatePrivateKey, jwt } from \"../modules\";\n\nexport const appendCorsAnywhere = (os, url) => {\n  return os === \"web\" ? `https://cors-anywhere.herokuapp.com/${url}` : url;\n};\n\nexport const initializeApp = () => {\n  const [privateKeyState, setPrivateKeyState] = React.useState(\"\");\n  const [screenState, setScreenState] = React.useState(\"\");\n\n  const [isFontsLoaded] = useFonts({\n    NotoSansJP_400Regular,\n    NotoSansJP_700Bold,\n  });\n\n  const loadPrivateKeyAsync = async () => {\n    let privateKey = await AsyncStorage.getItem(\"@private_key\");\n    if (!privateKey) {\n      privateKey = generatePrivateKey();\n      AsyncStorage.setItem(\"@private_key\", privateKey);\n    }\n    setPrivateKeyState(privateKey);\n  };\n\n  const loadScreenAsync = async () => {\n    const initialUrl = await Linking.getInitialURL();\n    if (!initialUrl) {\n      return;\n    }\n    const { queryParams } = Linking.parse(initialUrl);\n    if (!queryParams || Object.keys(queryParams).length === 0) {\n      setScreenState(\"Home\");\n      return;\n    }\n\n    if (queryParams.request_uri) {\n      const requestResponse = await axios.get(\n        appendCorsAnywhere(Platform.OS, queryParams.request_uri)\n      );\n\n      const request = requestResponse.data;\n      const decodedRequest = jwt.decode(request);\n      await AsyncStorage.setItem(\"@request\", JSON.stringify(decodedRequest));\n      if (decodedRequest.prompt === \"create\") {\n        await AsyncStorage.setItem(\"@mode\", \"receive\");\n        const manifestUri =\n        decodedRequest.presentation_definition.input_descriptors[0].issuance[0]\n          .manifest;\n        const manifestResponse = await axios.get(\n          appendCorsAnywhere(Platform.OS, manifestUri)\n        );\n        const manifest = manifestResponse.data;\n        await AsyncStorage.setItem(\"@manifest\", JSON.stringify(manifest));\n      } else {\n        await AsyncStorage.setItem(\"@mode\", \"present\");\n      } \n    }\n    setScreenState(\"Response\");\n  };\n\n  React.useEffect(() => {\n    loadPrivateKeyAsync();\n    loadScreenAsync();\n  }, []);\n\n  return { isFontsLoaded, privateKeyState, screenState };\n};\n\nexport const initializeResponse = () => {\n  const [modeState, setModeState] = React.useState(\"\");\n  const [requestState, setRequestState] = React.useState<any>();\n  const [manifestState, setManifestState] = React.useState<any>();\n  const [\n    presentaionManifestState,\n    setPresentaionManifestState,\n  ] = React.useState<any>();\n  const [idTokenState, setIdTokenState] = React.useState(\"\");\n  const [vcState, setVcState] = React.useState<any>();\n\n  React.useEffect(() => {\n    (async () => {\n      const initialUrl = await Linking.getInitialURL();\n      if (!initialUrl) {\n        return;\n      }\n\n      const { queryParams } = Linking.parse(initialUrl);\n      if (!queryParams || Object.keys(queryParams).length === 0) {\n        return;\n      }\n\n      const manifestString = await AsyncStorage.getItem(\"@manifest\");\n      if (!manifestString) {\n        return;\n      }\n\n      const manifest = JSON.parse(manifestString);\n      setManifestState(manifest);\n\n      if (queryParams.code) {\n        const openIdConfigurationResponse = await axios.get(\n          manifest.input.attestations.idTokens[0].configuration\n        );\n        const openIdConfiguration = openIdConfigurationResponse.data;\n        const tokenResponse = await axios.get(\n          `${openIdConfiguration.token_endpoint}&grant_type=authorization_code&code=${queryParams.code}`\n        );\n        const idToken = tokenResponse.data.id_token;\n        setIdTokenState(idToken);\n      }\n\n      let presentationManifest;\n      if (manifest.input.attestations.presentations) {\n        const presentationManifestResponse = await axios.get(\n          manifest.input.attestations.presentations[0].contracts[0]\n        );\n        presentationManifest = presentationManifestResponse.data;\n        setPresentaionManifestState(presentationManifest);\n      }\n\n      const mode = await AsyncStorage.getItem(\"@mode\");\n      if (!mode) {\n        return;\n      }\n      setModeState(mode);\n\n      const requestString = await AsyncStorage.getItem(\"@request\");\n      if (!requestString) {\n        return;\n      }\n      const request = JSON.parse(requestString);\n      setRequestState(request);\n\n      const vcString = await AsyncStorage.getItem(\"@vc\");\n      if (vcString && (presentationManifest || mode===\"present\")) {\n        let key \n        if(mode===\"present\"){\n          key = request.presentation_definition.input_descriptors[0].schema.uri[0]\n        }\n        else if(mode===\"receive\"){\n          key = manifest.input.attestations.presentations[0].credentialType\n        }\n        const vc = JSON.parse(vcString);\n        setVcState(\n          vc[key]\n        );\n      }\n\n    })();\n  }, []);\n  return {\n    manifestState,\n    requestState,\n    modeState,\n    idTokenState,\n    vcState,\n    presentaionManifestState,\n  };\n};\n\nexport const initializeHome = () => {\n  const [vcState, setVcState] = React.useState<any>();\n\n  React.useEffect(() => {\n    (async () => {\n      const vcString = await AsyncStorage.getItem(\"@vc\");\n      if (!vcString) {\n        return;\n      }\n      const vc = JSON.parse(vcString);\n      setVcState(vc);\n    })();\n  }, []);\n  return { vcState };\n};\n","import React from \"react\";\nimport { View } from \"react-native\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport default (props: Props) => {\n  return <View>{props.children}</View>;\n};\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport tailwind from \"tailwind-rn\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport default (props: Props) => {\n  return (\n    <View\n      style={[\n        tailwind(\"h-full\"),\n        {\n          backgroundColor: \"#F0F0F0\",\n        },\n      ]}\n    >\n      {props.children}\n    </View>\n  );\n};\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport tailwind from \"tailwind-rn\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport default (props: Props) => {\n  return <View style={tailwind(\"p-4\")}>{props.children}</View>;\n};\n","import React from \"react\";\nimport { Text, View, Image } from \"react-native\";\nimport tailwind from \"tailwind-rn\";\n\ntype Props = {\n  title: string;\n  icon: string;\n  issuedBy: string;\n  textColor: string;\n  backgroundColor: string;\n  size?: string;\n};\n\nexport default (props: Props) => {\n  const size = props.size ? props.size : \"48\";\n\n  return (\n    <View\n      style={[\n        tailwind(`relative h-${size} rounded-lg`),\n        {\n          backgroundColor: props.backgroundColor,\n        },\n      ]}\n    >\n      <Image\n        style={tailwind(\"absolute left-0 top-0 m-2 w-10 h-10 rounded-full\")}\n        source={{ uri: props.icon }}\n      />\n      <Text\n        style={[\n          tailwind(\"absolute top-0 right-0 m-4 text-lg\"),\n          {\n            color: props.textColor,\n          },\n        ]}\n      >\n        {props.title}\n      </Text>\n      <Text\n        style={[\n          tailwind(\"absolute bottom-0 left-0 m-4 text-sm\"),\n          {\n            color: props.textColor,\n          },\n        ]}\n      >\n        {props.issuedBy}\n      </Text>\n    </View>\n  );\n};\n","import * as React from \"react\";\nimport { View } from \"react-native\";\nimport { Header, Divider, Text } from \"react-native-elements\";\n\nimport tailwind from \"tailwind-rn\";\n\nimport Container from \"../components/atoms/Container\";\nimport Layout from \"../components/atoms/Layout\";\nimport Section from \"../components/atoms/Section\";\nimport Credential from \"../components/molecules/Credential\";\nimport { initializeHome } from \"../hooks\";\n\nexport default ({ navigation }) => {\n  const { vcState } = initializeHome();\n\n  const Credentials = () => {\n    if (!vcState) {\n      return null;\n    } else {\n      const Cards = Object.keys(vcState).map((key, index) => {\n        const { card } = vcState[key];\n        return (\n          <View key={key}>\n            {index > 0 && <Divider style={tailwind(\"mx-2 my-4\")} />}\n            <Credential\n              title={card.title}\n              icon={card.logo.uri}\n              issuedBy={card.issuedBy}\n              textColor={card.textColor}\n              backgroundColor={card.backgroundColor}\n            />\n            <Text\n              onPress={() => detail(key)}\n              style={[tailwind(\"text-center text-xs text-blue-600 mt-4\")]}\n            >\n              View detail\n            </Text>\n          </View>\n        );\n      });\n      return <Section>{Cards}</Section>;\n    }\n  };\n\n  const detail = (key) => {\n    navigation.navigate(\"Credential\", {\n      key: key,\n    });\n  };\n\n  const scnanner = () => {\n    navigation.navigate(\"Scanner\");\n  };\n\n  const home = () => {\n    window.location.href = window.location.href.split(/[?#]/)[0];\n    navigation.navigate(\"Home\");\n  };\n\n  return (\n    <Layout>\n      <Header\n        centerComponent={{\n          text: \"Credentials\",\n          style: { color: \"#fff\" },\n          onPress: home,\n        }}\n        rightComponent={{\n          icon: \"camera\",\n          color: \"#fff\",\n          onPress: scnanner,\n        }}\n      />\n      <Container>\n        <Credentials />\n      </Container>\n    </Layout>\n  );\n};\n","import * as Linking from \"expo-linking\";\nimport * as React from \"react\";\nimport { Card, Divider, Button, Header } from \"react-native-elements\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { Platform } from \"react-native\";\n\nimport axios from \"axios\";\nimport tailwind from \"tailwind-rn\";\n\nimport Container from \"../components/atoms/Container\";\nimport Layout from \"../components/atoms/Layout\";\nimport Section from \"../components/atoms/Section\";\nimport Credential from \"../components/molecules/Credential\";\nimport { WalletContext } from \"../contexts\";\nimport { initializeResponse, appendCorsAnywhere } from \"../hooks\";\nimport { Wallet } from \"../modules\";\nconst qs = require(\"querystring\");\n\nexport default ({ navigation }) => {\n  const wallet = React.useContext(WalletContext) as Wallet;\n  const {\n    manifestState,\n    requestState,\n    modeState,\n    vcState,\n    presentaionManifestState,\n    idTokenState,\n  } = initializeResponse();\n\n  const isLoadingComplete = manifestState && requestState && modeState;\n\n  const submit = async () => {\n    let attestations;\n\n    if (\n      manifestState.input.attestations.idTokens &&\n      manifestState.input.attestations.presentations\n    ) {\n      attestations = {\n        idTokens: {\n          [manifestState.input.attestations.idTokens[0]\n            .configuration]: idTokenState,\n        },\n        presentations: {\n          [manifestState.input.attestations.presentations[0].credentialType]:\n            vcState.vc,\n        },\n      };\n    } else if (\n      manifestState.input.attestations.idTokens &&\n      !manifestState.input.attestations.presentations\n    ) {\n      attestations = {\n        idTokens: {\n          [manifestState.input.attestations.idTokens[0]\n            .configuration]: idTokenState,\n        },\n      };\n    } else if (\n      !manifestState.input.attestations.idTokens &&\n      manifestState.input.attestations.presentations\n    ) {\n      attestations = {\n        presentations: {\n          [manifestState.input.attestations.presentations[0].credentialType]:\n            vcState.vc,\n        },\n      };\n    }    \n\n    if(modeState === \"receive\"){\n      const payload = {\n        aud: manifestState.input.credentialIssuer,\n        contract:\n          requestState.presentation_definition.input_descriptors[0].issuance[0]\n            .manifest,\n        attestations,\n      };\n      const selfIssuedIdToken = wallet.siop(payload);\n      const vcResponse = await axios.post(\n        manifestState.input.credentialIssuer,\n        selfIssuedIdToken,\n        {\n          headers: { \"Content-Type\": \"text/plain\" },\n        }\n      );\n      const original = await AsyncStorage.getItem(\"@vc\");\n      let parsed;\n      if (original) {\n        parsed = JSON.parse(original);\n      }\n      const vc = {\n        ...parsed,\n        [requestState.presentation_definition.input_descriptors[0].schema.uri[0]]: {\n          vc: vcResponse.data.vc,\n          card: manifestState.display.card,\n        },\n      };\n      await AsyncStorage.setItem(\"@vc\", JSON.stringify(vc));\n    } else if (modeState === \"present\") {\n      const attestations = {\n        presentations: {\n          [requestState.presentation_definition.input_descriptors[0].schema.uri[0]]:\n            vcState.vc,\n        },\n      };\n      const payload = {\n        aud: requestState.redirect_uri,\n        nonce: requestState.nonce,\n        state: requestState.state,\n        attestations,\n      };\n      const selfIssuedIdToken = wallet.siop(payload);\n      await axios.post(\n        appendCorsAnywhere(Platform.OS,requestState.redirect_uri),\n        qs.stringify({id_token: selfIssuedIdToken, state: requestState.state}),\n        {\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        }\n      );\n    }\n    window.location.href = window.location.href.split(/[?#]/)[0];\n    navigation.navigate(\"Home\");\n  };\n\n  const authenticate = async (openIdConfigurationUri, client_id) => {\n    const openIdConfigurationResponse = await axios.get(openIdConfigurationUri);\n    const openIdConfiguration = openIdConfigurationResponse.data;\n    const redirect_uri = \"https://browser-wallet.azurewebsites.net/\";\n    const authorizationUri = `${openIdConfiguration.authorization_endpoint}&redirect_uri=${redirect_uri}&client_id=${client_id}&response_type=code&scope=openid`;\n    Linking.openURL(authorizationUri);\n  };\n\n  const CredentialsToBeIssued = () => {\n    return (\n      <Section>\n        <Credential\n          title={manifestState.display.card.title}\n          icon={manifestState.display.card.logo.uri}\n          issuedBy={manifestState.display.card.issuedBy}\n          textColor={manifestState.display.card.textColor}\n          backgroundColor={manifestState.display.card.backgroundColor}\n        />\n      </Section>\n    );\n  };\n\n  const IdTokensToBeSubmitted = () => {\n    const idToken = manifestState.input.attestations.idTokens[0];\n    const hostname = Linking.parse(idToken.configuration).hostname as string;\n    return (\n      <Card>\n        <Card.Title>Sign-in Required</Card.Title>\n        <Card.Divider />\n        <Button\n          type=\"outline\"\n          disabled={idTokenState !== \"\"}\n          title={hostname}\n          onPress={() => authenticate(idToken.configuration, idToken.client_id)}\n        />\n      </Card>\n    );\n  };\n\n  const CredentialsToBeSubmitted = () => {\n    return (\n      <Card>\n        <Card.Title>Credentials Required</Card.Title>\n        <Card.Divider />\n        <Credential\n          title={presentaionManifestState.display.card.title}\n          icon={presentaionManifestState.display.card.logo.uri}\n          issuedBy={presentaionManifestState.display.card.issuedBy}\n          textColor={presentaionManifestState.display.card.textColor}\n          backgroundColor={\n            presentaionManifestState.display.card.backgroundColor\n          }\n          size=\"40\"\n        />\n      </Card>\n    );\n  };\n\n  const home = () => {\n    window.location.href = window.location.href.split(/[?#]/)[0];\n    navigation.navigate(\"Home\");\n  };\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <Layout>\n        <Header\n          leftComponent={{ icon: \"chevron-left\", color: \"#fff\", onPress: home }}\n          centerComponent={{\n            text:\n              modeState === \"receive\"\n                ? \"Receive Credentials\"\n                : \"Present Credentials\",\n            style: { color: \"#fff\" },\n          }}\n        />\n\n        <Container>\n          <CredentialsToBeIssued />\n          <Divider />\n          {manifestState.input.attestations.idTokens && modeState!==\"present\" && (\n            <IdTokensToBeSubmitted />\n          )}\n          {presentaionManifestState && <CredentialsToBeSubmitted />}\n          <Button\n            style={tailwind(\"m-4 mt-8\")}\n            title=\"Submit\"\n            // disabled={idTokenState === \"\"}\n            onPress={submit}\n          />\n        </Container>\n      </Layout>\n    );\n  }\n};\n","import * as React from \"react\";\nimport { Text, Card, Divider, Header } from \"react-native-elements\";\nimport tailwind from \"tailwind-rn\";\nimport Container from \"../components/atoms/Container\";\nimport Layout from \"../components/atoms/Layout\";\nimport Section from \"../components/atoms/Section\";\nimport Credential from \"../components/molecules/Credential\";\n\nimport { initializeHome } from \"../hooks\";\nimport { jwt } from \"../modules\";\n\nexport default ({ route, navigation }) => {\n  const { vcState } = initializeHome();\n  const Credentials = () => {\n    if (!vcState) {\n      return null;\n    } else {\n      const { key } = route.params;\n      const cardOne = vcState[key];\n\n      const decoded = jwt.decode(cardOne.vc);\n      const subject = decoded.vc.credentialSubject;\n      return (\n        <>\n          {cardOne && (\n            <>\n              <Section>\n                <Credential\n                  title={cardOne.card.title}\n                  icon={cardOne.card.logo.uri}\n                  issuedBy={cardOne.card.issuedBy}\n                  textColor={cardOne.card.textColor}\n                  backgroundColor={cardOne.card.backgroundColor}\n                />\n              </Section>\n              <Divider />\n              {Object.keys(subject).map((key) => (\n                <Card key={key}>\n                  <Text\n                    style={[tailwind(\"text-xm p-2\")]}\n                  >{`${key}: ${subject[key]}`}</Text>\n                </Card>\n              ))}\n            </>\n          )}\n          {}\n        </>\n      );\n    }\n  };\n\n  const home = () => {\n    navigation.navigate(\"Home\");\n  };\n\n  const scnanner = () => {\n    navigation.navigate(\"Scanner\");\n  };\n\n  return (\n    <Layout>\n      <Header\n        leftComponent={{ icon: \"chevron-left\", color: \"#fff\", onPress: home }}\n        centerComponent={{\n          text: \"Credential Detail\",\n          style: { color: \"#fff\" },\n        }}\n        rightComponent={{\n          icon: \"camera\",\n          color: \"#fff\",\n          onPress: scnanner,\n        }}\n      />\n      <Container>\n        <Credentials />\n      </Container>\n    </Layout>\n  );\n};\n","import * as Linking from \"expo-linking\";\nimport React from \"react\";\nimport { Text, View, StyleSheet, Button, Platform } from \"react-native\";\nimport { Header } from \"react-native-elements\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport QrReader from \"react-qr-reader\";\n\nexport default ({ navigation }) => {\n  const handleBarCodeScannerScanned = ({ data }) => {\n    console.log(data);\n  };\n\n  const handleQrReaderScanned = (data) => {\n    if (!data) {\n      return;\n    }\n    const { queryParams } = Linking.parse(data);\n    if (!queryParams) {\n      return;\n    }\n    window.location.href = `${window.location.href}?request_uri=${queryParams.request_uri}`;\n  };\n\n  const handleQrReaderError = (err) => {\n    console.log(err);\n  };\n\n  const home = () => {\n    navigation.navigate(\"Home\");\n  };\n\n  return (\n    <>\n      <Header\n        leftComponent={{ icon: \"chevron-left\", color: \"#fff\", onPress: home }}\n        centerComponent={{\n          text: \"Scan QR Code\",\n          style: { color: \"#fff\" },\n        }}\n        rightComponent={{ icon: \"menu\", color: \"#fff\" }}\n      />\n      {Platform.OS !== \"web\" ? (\n        <View\n          style={{\n            flex: 1,\n            flexDirection: \"column\",\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <BarCodeScanner\n            onBarCodeScanned={handleBarCodeScannerScanned}\n            style={StyleSheet.absoluteFillObject}\n          />\n        </View>\n      ) : (\n        <QrReader\n          onError={handleQrReaderError}\n          onScan={handleQrReaderScanned}\n        />\n      )}\n    </>\n  );\n};\n","import { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport * as React from \"react\";\n\nimport { ScreenContext } from \"../contexts\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ResponseScreen from \"../screens/ResponseScreen\";\nimport CredentialScreen from \"../screens/CredentialScreen\";\nimport ScannerScreen from \"../screens/ScannerScreen\";\n\nconst Stack = createStackNavigator();\n\nexport default () => {\n  const mode = React.useContext(ScreenContext) as string;\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}\n        initialRouteName={mode}\n      >\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"Response\" component={ResponseScreen} />\n        <Stack.Screen name=\"Credential\" component={CredentialScreen} />\n        <Stack.Screen name=\"Scanner\" component={ScannerScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n","import \"./polyfills/global\";\n\nimport { AppLoading } from \"expo\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { ThemeProvider } from \"react-native-elements\";\n\nimport { WalletContext, ScreenContext } from \"./contexts\";\nimport { initializeApp } from \"./hooks\";\nimport { Wallet } from \"./modules\";\nimport Navigation from \"./navigation\";\n\nexport default () => {\n  const { isFontsLoaded, privateKeyState, screenState } = initializeApp();\n\n  const isLoadingComplete = isFontsLoaded && privateKeyState && screenState;\n  if (!isLoadingComplete) {\n    return <AppLoading />;\n  } else {\n    const wallet = new Wallet(privateKeyState);\n    console.log(wallet);\n    return (\n      <ThemeProvider>\n        <WalletContext.Provider value={new Wallet(privateKeyState)}>\n          <ScreenContext.Provider value={screenState}>\n            <SafeAreaProvider>\n              <Navigation />\n              <StatusBar />\n            </SafeAreaProvider>\n          </ScreenContext.Provider>\n        </WalletContext.Provider>\n      </ThemeProvider>\n    );\n  }\n};\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import { Buffer } from \"buffer\";\nglobal.Buffer = Buffer;\n","import crypto from \"crypto\";\n\nexport const constants = {\n  did: {\n    methodName: \"ion\",\n    publicKeyType: \"EcdsaSecp256k1VerificationKey2019\",\n    keyId: \"signingKey\",\n  },\n  jwt: {\n    header: {\n      alg: \"ES256K\",\n    },\n    payload: {\n      iss: \"https://self-issued.me\",\n      iat: 0,\n      exp: 9999999999,\n    },\n  },\n  jwk: {\n    kty: \"EC\",\n    crv: \"P-256K\",\n  },\n  ecdh: {\n    crv: \"secp256k1\",\n  },\n  hash: {\n    type: \"sha256\",\n    fc: 0x12,\n  },\n  pem: {\n    pre: \"-----BEGIN EC PRIVATE KEY-----\\n\",\n    post: \"\\n-----END EC PRIVATE KEY-----\",\n  },\n  asn1: {\n    pre: \"302e0201010420\",\n    post: \"a00706052b8104000a\",\n  },\n};\n\nexport const base64url = {\n  encode: (unencoded) => {\n    return Buffer.from(unencoded)\n      .toString(\"base64\")\n      .replace(/\\+/g, \"-\")\n      .replace(/\\//g, \"_\")\n      .replace(/=+$/, \"\");\n  },\n  decode: (encoded) => {\n    encoded = encoded.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    while (encoded.length % 4) {\n      encoded += \"=\";\n    }\n    return Buffer.from(encoded, \"base64\").toString(\"utf8\");\n  },\n};\n\nexport const jwt = {\n  decode: (jwt) => {\n    const payload = JSON.parse(base64url.decode(jwt.split(\".\")[1]));\n    return payload;\n  },\n};\n\nexport const multihash = (data) => {\n  const digest = crypto.createHash(constants.hash.type).update(data).digest();\n  const prefix = Buffer.from([constants.hash.fc, digest.length]);\n  return Buffer.concat([prefix, digest]);\n};\n\nexport const generateJti = () => {\n  return crypto.randomBytes(16).toString(\"hex\");\n};\n\nexport const generatePrivateKey = () => {\n  return crypto.randomBytes(32).toString(\"hex\");\n};\n\nexport const privateKeyToPem = (privateKey) => {\n  const asn1 = `${constants.asn1.pre}${privateKey}${constants.asn1.post}`;\n  const asn1Base64 = Buffer.from(asn1, \"hex\").toString(\"base64\");\n  const pem = `${constants.pem.pre}${asn1Base64}${constants.pem.post}`;\n  return pem;\n};\n\nexport const privateKeyToJwk = (privateKey) => {\n  const privateKeyBuffer = Buffer.from(privateKey, \"hex\");\n  const ecdh = crypto.createECDH(constants.ecdh.crv);\n  ecdh.setPrivateKey(privateKeyBuffer);\n  const pub = ecdh.getPublicKey();\n  const publicKeyJwk = {\n    kty: constants.jwk.kty,\n    crv: constants.jwk.crv,\n    x: base64url.encode(pub.slice(1, 32 + 1)),\n    y: base64url.encode(pub.slice(32 + 1)),\n  };\n  const privateKeyJwk = {\n    d: base64url.encode(privateKeyBuffer),\n    ...publicKeyJwk,\n  };\n  return { publicKeyJwk, privateKeyJwk };\n};\n\nexport const publicKeyJwkToIonDid = (publicKeyJwk) => {\n  const id = constants.did.keyId;\n  const canonical_jwk = JSON.stringify(publicKeyJwk);\n  const commitment_hash = base64url.encode(multihash(canonical_jwk));\n  const patches = [\n    {\n      action: \"replace\",\n      document: {\n        public_keys: [\n          {\n            id,\n            type: constants.did.publicKeyType,\n            jwk: publicKeyJwk,\n            purpose: [\"auth\", \"general\"],\n          },\n        ],\n      },\n    },\n  ];\n  const canonical_delta = JSON.stringify({\n    update_commitment: commitment_hash,\n    patches,\n  });\n  const delta = base64url.encode(canonical_delta);\n  const delta_hash = base64url.encode(multihash(canonical_delta));\n  const canonical_suffix_data = JSON.stringify({\n    delta_hash,\n    recovery_commitment: commitment_hash,\n  });\n  const didUniqueSuffix = base64url.encode(multihash(canonical_suffix_data));\n  const suffix_data = base64url.encode(canonical_suffix_data);\n  const shortFormDid = `did:${constants.did.methodName}:${didUniqueSuffix}`;\n  const longFormDid = `${shortFormDid}?-${constants.did.methodName}-initial-state=${suffix_data}.${delta}`;\n  return longFormDid;\n};\n\nexport class Wallet {\n  privateKey;\n  publicKeyJwk;\n  privateKeyJwk;\n  did;\n  constructor(privateKey?) {\n    this.privateKey = privateKey ? privateKey : generatePrivateKey();\n    const { publicKeyJwk, privateKeyJwk } = privateKeyToJwk(this.privateKey);\n    this.publicKeyJwk = publicKeyJwk;\n    this.privateKeyJwk = privateKeyJwk;\n    this.did = publicKeyJwkToIonDid(publicKeyJwk);\n  }\n\n  siop = (options?) => {\n    const jti = generateJti();\n    const header = {\n      alg: constants.jwt.header.alg,\n      kid: `${this.did}#${constants.did.keyId}`,\n    };\n    const payload = {\n      iss: constants.jwt.payload.iss,\n      iat: constants.jwt.payload.iat,\n      exp: constants.jwt.payload.exp,\n      did: this.did,\n      jti,\n      sub_jwk:this.publicKeyJwk,\n      ...options,\n    };\n    return this.sign(header, payload);\n  };\n\n  sign = (header, payload) => {\n    const pem = privateKeyToPem(this.privateKey);\n    const encodedHeader = base64url.encode(JSON.stringify(header));\n    const encodedPayload = base64url.encode(JSON.stringify(payload));\n    const message = `${encodedHeader}.${encodedPayload}`;\n    const signature = base64url.encode(\n      crypto.createSign(constants.hash.type).update(message).sign(pem)\n    );\n    const result = `${encodedHeader}.${encodedPayload}.${signature}`;\n    return result;\n  };\n}\n"],"sourceRoot":""}