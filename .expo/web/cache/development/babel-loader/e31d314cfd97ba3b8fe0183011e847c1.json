{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as Linking from \"expo-linking\";\nimport { useFonts, NotoSansJP_400Regular, NotoSansJP_700Bold } from \"@expo-google-fonts/noto-sans-jp\";\nimport * as React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport axios from \"axios\";\nimport { generatePrivateKey, jwt } from \"../modules\";\nexport var appendCorsAnywhere = function appendCorsAnywhere(os, url) {\n  return os === \"web\" ? \"https://cors-anywhere.herokuapp.com/\" + url : url;\n};\nexport var initializeApp = function initializeApp() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      privateKeyState = _React$useState2[0],\n      setPrivateKeyState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      screenState = _React$useState4[0],\n      setScreenState = _React$useState4[1];\n\n  var _useFonts = useFonts({\n    NotoSansJP_400Regular: NotoSansJP_400Regular,\n    NotoSansJP_700Bold: NotoSansJP_700Bold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      isFontsLoaded = _useFonts2[0];\n\n  var loadPrivateKeyAsync = function loadPrivateKeyAsync() {\n    var privateKey;\n    return _regeneratorRuntime.async(function loadPrivateKeyAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@private_key\"));\n\n          case 2:\n            privateKey = _context.sent;\n\n            if (!privateKey) {\n              privateKey = generatePrivateKey();\n              AsyncStorage.setItem(\"@private_key\", privateKey);\n            }\n\n            setPrivateKeyState(privateKey);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadScreenAsync = function loadScreenAsync() {\n    var initialUrl, _Linking$parse, queryParams, requestResponse, request, decodedRequest, manifestUri, manifestResponse, manifest;\n\n    return _regeneratorRuntime.async(function loadScreenAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Linking.getInitialURL());\n\n          case 2:\n            initialUrl = _context2.sent;\n\n            if (initialUrl) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _Linking$parse = Linking.parse(initialUrl), queryParams = _Linking$parse.queryParams;\n\n            if (!(!queryParams || Object.keys(queryParams).length === 0)) {\n              _context2.next = 9;\n              break;\n            }\n\n            setScreenState(\"Home\");\n            return _context2.abrupt(\"return\");\n\n          case 9:\n            if (!queryParams.request_uri) {\n              _context2.next = 31;\n              break;\n            }\n\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(axios.get(appendCorsAnywhere(Platform.OS, queryParams.request_uri)));\n\n          case 12:\n            requestResponse = _context2.sent;\n            request = requestResponse.data;\n            decodedRequest = jwt.decode(request);\n            _context2.next = 17;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@request\", JSON.stringify(decodedRequest)));\n\n          case 17:\n            if (!(decodedRequest.prompt === \"create\")) {\n              _context2.next = 29;\n              break;\n            }\n\n            _context2.next = 20;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@mode\", \"receive\"));\n\n          case 20:\n            manifestUri = decodedRequest.presentation_definition.input_descriptors[0].issuance[0].manifest;\n            _context2.next = 23;\n            return _regeneratorRuntime.awrap(axios.get(appendCorsAnywhere(Platform.OS, manifestUri)));\n\n          case 23:\n            manifestResponse = _context2.sent;\n            manifest = manifestResponse.data;\n            _context2.next = 27;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@manifest\", JSON.stringify(manifest)));\n\n          case 27:\n            _context2.next = 31;\n            break;\n\n          case 29:\n            _context2.next = 31;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@mode\", \"present\"));\n\n          case 31:\n            setScreenState(\"Response\");\n\n          case 32:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  React.useEffect(function () {\n    loadPrivateKeyAsync();\n    loadScreenAsync();\n  }, []);\n  return {\n    isFontsLoaded: isFontsLoaded,\n    privateKeyState: privateKeyState,\n    screenState: screenState\n  };\n};\nexport var initializeResponse = function initializeResponse() {\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      modeState = _React$useState6[0],\n      setModeState = _React$useState6[1];\n\n  var _React$useState7 = React.useState(),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      requestState = _React$useState8[0],\n      setRequestState = _React$useState8[1];\n\n  var _React$useState9 = React.useState(),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      manifestState = _React$useState10[0],\n      setManifestState = _React$useState10[1];\n\n  var _React$useState11 = React.useState(),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      presentaionManifestState = _React$useState12[0],\n      setPresentaionManifestState = _React$useState12[1];\n\n  var _React$useState13 = React.useState(\"\"),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      idTokenState = _React$useState14[0],\n      setIdTokenState = _React$useState14[1];\n\n  var _React$useState15 = React.useState(),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      vcState = _React$useState16[0],\n      setVcState = _React$useState16[1];\n\n  React.useEffect(function () {\n    (function _callee() {\n      var initialUrl, _Linking$parse2, queryParams, manifestString, manifest, openIdConfigurationResponse, openIdConfiguration, tokenResponse, idToken, presentationManifest, presentationManifestResponse, mode, requestString, request, vcString, key, vc;\n\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(Linking.getInitialURL());\n\n            case 2:\n              initialUrl = _context3.sent;\n\n              if (initialUrl) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 5:\n              _Linking$parse2 = Linking.parse(initialUrl), queryParams = _Linking$parse2.queryParams;\n\n              if (!(!queryParams || Object.keys(queryParams).length === 0)) {\n                _context3.next = 8;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 8:\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@manifest\"));\n\n            case 10:\n              manifestString = _context3.sent;\n\n              if (manifestString) {\n                _context3.next = 13;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 13:\n              manifest = JSON.parse(manifestString);\n              setManifestState(manifest);\n\n              if (!queryParams.code) {\n                _context3.next = 25;\n                break;\n              }\n\n              _context3.next = 18;\n              return _regeneratorRuntime.awrap(axios.get(manifest.input.attestations.idTokens[0].configuration));\n\n            case 18:\n              openIdConfigurationResponse = _context3.sent;\n              openIdConfiguration = openIdConfigurationResponse.data;\n              _context3.next = 22;\n              return _regeneratorRuntime.awrap(axios.get(openIdConfiguration.token_endpoint + \"&grant_type=authorization_code&code=\" + queryParams.code));\n\n            case 22:\n              tokenResponse = _context3.sent;\n              idToken = tokenResponse.data.id_token;\n              setIdTokenState(idToken);\n\n            case 25:\n              if (!manifest.input.attestations.presentations) {\n                _context3.next = 31;\n                break;\n              }\n\n              _context3.next = 28;\n              return _regeneratorRuntime.awrap(axios.get(manifest.input.attestations.presentations[0].contracts[0]));\n\n            case 28:\n              presentationManifestResponse = _context3.sent;\n              presentationManifest = presentationManifestResponse.data;\n              setPresentaionManifestState(presentationManifest);\n\n            case 31:\n              _context3.next = 33;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@mode\"));\n\n            case 33:\n              mode = _context3.sent;\n\n              if (mode) {\n                _context3.next = 36;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 36:\n              setModeState(mode);\n              _context3.next = 39;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@request\"));\n\n            case 39:\n              requestString = _context3.sent;\n\n              if (requestString) {\n                _context3.next = 42;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 42:\n              request = JSON.parse(requestString);\n              setRequestState(request);\n              _context3.next = 46;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@vc\"));\n\n            case 46:\n              vcString = _context3.sent;\n\n              if (vcString && (presentationManifest || mode === \"present\")) {\n                if (mode === \"present\") {\n                  key = request.presentation_definition.input_descriptors[0].schema.uri[0];\n                } else if (mode === \"receive\") {\n                  key = manifest.input.attestations.presentations[0].credentialType;\n                }\n\n                vc = JSON.parse(vcString);\n                setVcState(vc[key]);\n              }\n\n            case 48:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return {\n    manifestState: manifestState,\n    requestState: requestState,\n    modeState: modeState,\n    idTokenState: idTokenState,\n    vcState: vcState,\n    presentaionManifestState: presentaionManifestState\n  };\n};\nexport var initializeHome = function initializeHome() {\n  var _React$useState17 = React.useState(),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      vcState = _React$useState18[0],\n      setVcState = _React$useState18[1];\n\n  React.useEffect(function () {\n    (function _callee2() {\n      var vcString, vc;\n      return _regeneratorRuntime.async(function _callee2$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@vc\"));\n\n            case 2:\n              vcString = _context4.sent;\n\n              if (vcString) {\n                _context4.next = 5;\n                break;\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 5:\n              vc = JSON.parse(vcString);\n              setVcState(vc);\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return {\n    vcState: vcState\n  };\n};","map":{"version":3,"sources":["/Users/naohirofujie/Develop/MSVC/bbwallet/browser-wallet/wallet/hooks/index.ts"],"names":["Linking","useFonts","NotoSansJP_400Regular","NotoSansJP_700Bold","React","AsyncStorage","axios","generatePrivateKey","jwt","appendCorsAnywhere","os","url","initializeApp","useState","privateKeyState","setPrivateKeyState","screenState","setScreenState","isFontsLoaded","loadPrivateKeyAsync","getItem","privateKey","setItem","loadScreenAsync","getInitialURL","initialUrl","parse","queryParams","Object","keys","length","request_uri","get","Platform","OS","requestResponse","request","data","decodedRequest","decode","JSON","stringify","prompt","manifestUri","presentation_definition","input_descriptors","issuance","manifest","manifestResponse","useEffect","initializeResponse","modeState","setModeState","requestState","setRequestState","manifestState","setManifestState","presentaionManifestState","setPresentaionManifestState","idTokenState","setIdTokenState","vcState","setVcState","manifestString","code","input","attestations","idTokens","configuration","openIdConfigurationResponse","openIdConfiguration","token_endpoint","tokenResponse","idToken","id_token","presentations","contracts","presentationManifestResponse","presentationManifest","mode","requestString","vcString","key","schema","uri","credentialType","vc","initializeHome"],"mappings":"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","sourcesContent":["import * as Linking from \"expo-linking\";\nimport {\n  useFonts,\n  NotoSansJP_400Regular,\n  NotoSansJP_700Bold,\n} from \"@expo-google-fonts/noto-sans-jp\";\nimport * as React from \"react\";\nimport { Platform } from \"react-native\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nimport axios from \"axios\";\n\nimport { generatePrivateKey, jwt } from \"../modules\";\n\nexport const appendCorsAnywhere = (os, url) => {\n  return os === \"web\" ? `https://cors-anywhere.herokuapp.com/${url}` : url;\n};\n\nexport const initializeApp = () => {\n  const [privateKeyState, setPrivateKeyState] = React.useState(\"\");\n  const [screenState, setScreenState] = React.useState(\"\");\n\n  const [isFontsLoaded] = useFonts({\n    NotoSansJP_400Regular,\n    NotoSansJP_700Bold,\n  });\n\n  const loadPrivateKeyAsync = async () => {\n    let privateKey = await AsyncStorage.getItem(\"@private_key\");\n    if (!privateKey) {\n      privateKey = generatePrivateKey();\n      AsyncStorage.setItem(\"@private_key\", privateKey);\n    }\n    setPrivateKeyState(privateKey);\n  };\n\n  const loadScreenAsync = async () => {\n    const initialUrl = await Linking.getInitialURL();\n    if (!initialUrl) {\n      return;\n    }\n    const { queryParams } = Linking.parse(initialUrl);\n    if (!queryParams || Object.keys(queryParams).length === 0) {\n      setScreenState(\"Home\");\n      return;\n    }\n\n    if (queryParams.request_uri) {\n      const requestResponse = await axios.get(\n        appendCorsAnywhere(Platform.OS, queryParams.request_uri)\n      );\n\n      const request = requestResponse.data;\n      const decodedRequest = jwt.decode(request);\n      await AsyncStorage.setItem(\"@request\", JSON.stringify(decodedRequest));\n      if (decodedRequest.prompt === \"create\") {\n        await AsyncStorage.setItem(\"@mode\", \"receive\");\n        const manifestUri =\n        decodedRequest.presentation_definition.input_descriptors[0].issuance[0]\n          .manifest;\n        const manifestResponse = await axios.get(\n          appendCorsAnywhere(Platform.OS, manifestUri)\n        );\n        const manifest = manifestResponse.data;\n        await AsyncStorage.setItem(\"@manifest\", JSON.stringify(manifest));\n      } else {\n        await AsyncStorage.setItem(\"@mode\", \"present\");\n      } \n    }\n    setScreenState(\"Response\");\n  };\n\n  React.useEffect(() => {\n    loadPrivateKeyAsync();\n    loadScreenAsync();\n  }, []);\n\n  return { isFontsLoaded, privateKeyState, screenState };\n};\n\nexport const initializeResponse = () => {\n  const [modeState, setModeState] = React.useState(\"\");\n  const [requestState, setRequestState] = React.useState<any>();\n  const [manifestState, setManifestState] = React.useState<any>();\n  const [\n    presentaionManifestState,\n    setPresentaionManifestState,\n  ] = React.useState<any>();\n  const [idTokenState, setIdTokenState] = React.useState(\"\");\n  const [vcState, setVcState] = React.useState<any>();\n\n  React.useEffect(() => {\n    (async () => {\n      const initialUrl = await Linking.getInitialURL();\n      if (!initialUrl) {\n        return;\n      }\n\n      const { queryParams } = Linking.parse(initialUrl);\n      if (!queryParams || Object.keys(queryParams).length === 0) {\n        return;\n      }\n\n      const manifestString = await AsyncStorage.getItem(\"@manifest\");\n      if (!manifestString) {\n        return;\n      }\n\n      const manifest = JSON.parse(manifestString);\n      setManifestState(manifest);\n\n      if (queryParams.code) {\n        const openIdConfigurationResponse = await axios.get(\n          manifest.input.attestations.idTokens[0].configuration\n        );\n        const openIdConfiguration = openIdConfigurationResponse.data;\n        const tokenResponse = await axios.get(\n          `${openIdConfiguration.token_endpoint}&grant_type=authorization_code&code=${queryParams.code}`\n        );\n        const idToken = tokenResponse.data.id_token;\n        setIdTokenState(idToken);\n      }\n\n      let presentationManifest;\n      if (manifest.input.attestations.presentations) {\n        const presentationManifestResponse = await axios.get(\n          manifest.input.attestations.presentations[0].contracts[0]\n        );\n        presentationManifest = presentationManifestResponse.data;\n        setPresentaionManifestState(presentationManifest);\n      }\n\n      const mode = await AsyncStorage.getItem(\"@mode\");\n      if (!mode) {\n        return;\n      }\n      setModeState(mode);\n\n      const requestString = await AsyncStorage.getItem(\"@request\");\n      if (!requestString) {\n        return;\n      }\n      const request = JSON.parse(requestString);\n      setRequestState(request);\n\n      const vcString = await AsyncStorage.getItem(\"@vc\");\n      if (vcString && (presentationManifest || mode===\"present\")) {\n        let key \n        if(mode===\"present\"){\n          key = request.presentation_definition.input_descriptors[0].schema.uri[0]\n        }\n        else if(mode===\"receive\"){\n          key = manifest.input.attestations.presentations[0].credentialType\n        }\n        const vc = JSON.parse(vcString);\n        setVcState(\n          vc[key]\n        );\n      }\n\n    })();\n  }, []);\n  return {\n    manifestState,\n    requestState,\n    modeState,\n    idTokenState,\n    vcState,\n    presentaionManifestState,\n  };\n};\n\nexport const initializeHome = () => {\n  const [vcState, setVcState] = React.useState<any>();\n\n  React.useEffect(() => {\n    (async () => {\n      const vcString = await AsyncStorage.getItem(\"@vc\");\n      if (!vcString) {\n        return;\n      }\n      const vc = JSON.parse(vcString);\n      setVcState(vc);\n    })();\n  }, []);\n  return { vcState };\n};\n"]},"metadata":{},"sourceType":"module"}