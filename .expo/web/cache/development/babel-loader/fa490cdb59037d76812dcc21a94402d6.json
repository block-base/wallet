{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/naohirofujie/Develop/MSVC/bbwallet/browser-wallet/wallet/screens/ResponseScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as Linking from \"expo-linking\";\nimport * as React from \"react\";\nimport { Card, Divider, Button, Header } from \"react-native-elements\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport axios from \"axios\";\nimport tailwind from \"tailwind-rn\";\nimport Container from \"../components/atoms/Container\";\nimport Layout from \"../components/atoms/Layout\";\nimport Section from \"../components/atoms/Section\";\nimport Credential from \"../components/molecules/Credential\";\nimport { WalletContext } from \"../contexts\";\nimport { initializeResponse, appendCorsAnywhere } from \"../hooks\";\n\nvar qs = require(\"querystring\");\n\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n  var wallet = React.useContext(WalletContext);\n\n  var _initializeResponse = initializeResponse(),\n      manifestState = _initializeResponse.manifestState,\n      requestState = _initializeResponse.requestState,\n      modeState = _initializeResponse.modeState,\n      vcState = _initializeResponse.vcState,\n      presentaionManifestState = _initializeResponse.presentaionManifestState,\n      idTokenState = _initializeResponse.idTokenState;\n\n  var isLoadingComplete = manifestState && requestState && modeState;\n\n  var submit = function submit() {\n    var attestations, payload, selfIssuedIdToken, vcResponse, original, parsed, vc, _attestations, _payload, _selfIssuedIdToken;\n\n    return _regeneratorRuntime.async(function submit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (manifestState.input.attestations.idTokens && manifestState.input.attestations.presentations) {\n              attestations = {\n                idTokens: _defineProperty({}, manifestState.input.attestations.idTokens[0].configuration, idTokenState),\n                presentations: _defineProperty({}, manifestState.input.attestations.presentations[0].credentialType, vcState.vc)\n              };\n            } else if (manifestState.input.attestations.idTokens && !manifestState.input.attestations.presentations) {\n              attestations = {\n                idTokens: _defineProperty({}, manifestState.input.attestations.idTokens[0].configuration, idTokenState)\n              };\n            } else if (!manifestState.input.attestations.idTokens && manifestState.input.attestations.presentations) {\n              attestations = {\n                presentations: _defineProperty({}, manifestState.input.attestations.presentations[0].credentialType, vcState.vc)\n              };\n            }\n\n            if (!(modeState === \"receive\")) {\n              _context.next = 16;\n              break;\n            }\n\n            payload = {\n              aud: manifestState.input.credentialIssuer,\n              contract: requestState.presentation_definition.input_descriptors[0].issuance[0].manifest,\n              attestations: attestations\n            };\n            selfIssuedIdToken = wallet.siop(payload);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.post(manifestState.input.credentialIssuer, selfIssuedIdToken, {\n              headers: {\n                \"Content-Type\": \"text/plain\"\n              }\n            }));\n\n          case 6:\n            vcResponse = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@vc\"));\n\n          case 9:\n            original = _context.sent;\n\n            if (original) {\n              parsed = JSON.parse(original);\n            }\n\n            vc = _objectSpread(_objectSpread({}, parsed), {}, _defineProperty({}, requestState.presentation_definition.input_descriptors[0].schema.uri[0], {\n              vc: vcResponse.data.vc,\n              card: manifestState.display.card\n            }));\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@vc\", JSON.stringify(vc)));\n\n          case 14:\n            _context.next = 22;\n            break;\n\n          case 16:\n            if (!(modeState === \"present\")) {\n              _context.next = 22;\n              break;\n            }\n\n            _attestations = {\n              presentations: _defineProperty({}, requestState.presentation_definition.input_descriptors[0].schema.uri[0], vcState.vc)\n            };\n            _payload = {\n              aud: requestState.redirect_uri,\n              nonce: requestState.nonce,\n              state: requestState.state,\n              attestations: _attestations\n            };\n            _selfIssuedIdToken = wallet.siop(_payload);\n            _context.next = 22;\n            return _regeneratorRuntime.awrap(axios.post(appendCorsAnywhere(Platform.OS, requestState.redirect_uri), qs.stringify({\n              id_token: _selfIssuedIdToken,\n              state: requestState.state\n            }), {\n              headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n              }\n            }));\n\n          case 22:\n            window.location.href = window.location.href.split(/[?#]/)[0];\n            navigation.navigate(\"Home\");\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var authenticate = function authenticate(openIdConfigurationUri, client_id) {\n    var openIdConfigurationResponse, openIdConfiguration, redirect_uri, authorizationUri;\n    return _regeneratorRuntime.async(function authenticate$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(openIdConfigurationUri));\n\n          case 2:\n            openIdConfigurationResponse = _context2.sent;\n            openIdConfiguration = openIdConfigurationResponse.data;\n            redirect_uri = \"https://browser-wallet.azurewebsites.net/\";\n            authorizationUri = openIdConfiguration.authorization_endpoint + \"&redirect_uri=\" + redirect_uri + \"&client_id=\" + client_id + \"&response_type=code&scope=openid\";\n            Linking.openURL(authorizationUri);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var CredentialsToBeIssued = function CredentialsToBeIssued() {\n    return React.createElement(Section, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, React.createElement(Credential, {\n      title: manifestState.display.card.title,\n      icon: manifestState.display.card.logo.uri,\n      issuedBy: manifestState.display.card.issuedBy,\n      textColor: manifestState.display.card.textColor,\n      backgroundColor: manifestState.display.card.backgroundColor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var IdTokensToBeSubmitted = function IdTokensToBeSubmitted() {\n    var idToken = manifestState.input.attestations.idTokens[0];\n    var hostname = Linking.parse(idToken.configuration).hostname;\n    return React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, React.createElement(Card.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, \"Sign-in Required\"), React.createElement(Card.Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      type: \"outline\",\n      disabled: idTokenState !== \"\",\n      title: hostname,\n      onPress: function onPress() {\n        return authenticate(idToken.configuration, idToken.client_id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var CredentialsToBeSubmitted = function CredentialsToBeSubmitted() {\n    return React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, React.createElement(Card.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, \"Credentials Required\"), React.createElement(Card.Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }), React.createElement(Credential, {\n      title: presentaionManifestState.display.card.title,\n      icon: presentaionManifestState.display.card.logo.uri,\n      issuedBy: presentaionManifestState.display.card.issuedBy,\n      textColor: presentaionManifestState.display.card.textColor,\n      backgroundColor: presentaionManifestState.display.card.backgroundColor,\n      size: \"40\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var home = function home() {\n    window.location.href = window.location.href.split(/[?#]/)[0];\n    navigation.navigate(\"Home\");\n  };\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(Layout, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }, React.createElement(Header, {\n      leftComponent: {\n        icon: \"chevron-left\",\n        color: \"#fff\",\n        onPress: home\n      },\n      centerComponent: {\n        text: modeState === \"receive\" ? \"Receive Credentials\" : \"Present Credentials\",\n        style: {\n          color: \"#fff\"\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }), React.createElement(Container, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, React.createElement(CredentialsToBeIssued, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }), React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }), manifestState.input.attestations.idTokens && modeState !== \"present\" && React.createElement(IdTokensToBeSubmitted, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }), presentaionManifestState && React.createElement(CredentialsToBeSubmitted, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 40\n      }\n    }), React.createElement(Button, {\n      style: tailwind(\"m-4 mt-8\"),\n      title: \"Submit\",\n      onPress: submit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    })));\n  }\n});","map":{"version":3,"sources":["/Users/naohirofujie/Develop/MSVC/bbwallet/browser-wallet/wallet/screens/ResponseScreen.tsx"],"names":["Linking","React","Card","Divider","Button","Header","AsyncStorage","axios","tailwind","Container","Layout","Section","Credential","WalletContext","initializeResponse","appendCorsAnywhere","qs","require","navigation","wallet","useContext","manifestState","requestState","modeState","vcState","presentaionManifestState","idTokenState","isLoadingComplete","submit","input","attestations","idTokens","presentations","configuration","credentialType","vc","payload","aud","credentialIssuer","contract","presentation_definition","input_descriptors","issuance","manifest","selfIssuedIdToken","siop","post","headers","vcResponse","getItem","original","parsed","JSON","parse","schema","uri","data","card","display","setItem","stringify","redirect_uri","nonce","state","Platform","OS","id_token","window","location","href","split","navigate","authenticate","openIdConfigurationUri","client_id","get","openIdConfigurationResponse","openIdConfiguration","authorizationUri","authorization_endpoint","openURL","CredentialsToBeIssued","title","logo","issuedBy","textColor","backgroundColor","IdTokensToBeSubmitted","idToken","hostname","CredentialsToBeSubmitted","home","icon","color","onPress","text","style"],"mappings":"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","sourcesContent":["import * as Linking from \"expo-linking\";\nimport * as React from \"react\";\nimport { Card, Divider, Button, Header } from \"react-native-elements\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { Platform } from \"react-native\";\n\nimport axios from \"axios\";\nimport tailwind from \"tailwind-rn\";\n\nimport Container from \"../components/atoms/Container\";\nimport Layout from \"../components/atoms/Layout\";\nimport Section from \"../components/atoms/Section\";\nimport Credential from \"../components/molecules/Credential\";\nimport { WalletContext } from \"../contexts\";\nimport { initializeResponse, appendCorsAnywhere } from \"../hooks\";\nimport { Wallet } from \"../modules\";\nconst qs = require(\"querystring\");\n\nexport default ({ navigation }) => {\n  const wallet = React.useContext(WalletContext) as Wallet;\n  const {\n    manifestState,\n    requestState,\n    modeState,\n    vcState,\n    presentaionManifestState,\n    idTokenState,\n  } = initializeResponse();\n\n  const isLoadingComplete = manifestState && requestState && modeState;\n\n  const submit = async () => {\n    let attestations;\n\n    if (\n      manifestState.input.attestations.idTokens &&\n      manifestState.input.attestations.presentations\n    ) {\n      attestations = {\n        idTokens: {\n          [manifestState.input.attestations.idTokens[0]\n            .configuration]: idTokenState,\n        },\n        presentations: {\n          [manifestState.input.attestations.presentations[0].credentialType]:\n            vcState.vc,\n        },\n      };\n    } else if (\n      manifestState.input.attestations.idTokens &&\n      !manifestState.input.attestations.presentations\n    ) {\n      attestations = {\n        idTokens: {\n          [manifestState.input.attestations.idTokens[0]\n            .configuration]: idTokenState,\n        },\n      };\n    } else if (\n      !manifestState.input.attestations.idTokens &&\n      manifestState.input.attestations.presentations\n    ) {\n      attestations = {\n        presentations: {\n          [manifestState.input.attestations.presentations[0].credentialType]:\n            vcState.vc,\n        },\n      };\n    }    \n\n    if(modeState === \"receive\"){\n      const payload = {\n        aud: manifestState.input.credentialIssuer,\n        contract:\n          requestState.presentation_definition.input_descriptors[0].issuance[0]\n            .manifest,\n        attestations,\n      };\n      const selfIssuedIdToken = wallet.siop(payload);\n      const vcResponse = await axios.post(\n        manifestState.input.credentialIssuer,\n        selfIssuedIdToken,\n        {\n          headers: { \"Content-Type\": \"text/plain\" },\n        }\n      );\n      const original = await AsyncStorage.getItem(\"@vc\");\n      let parsed;\n      if (original) {\n        parsed = JSON.parse(original);\n      }\n      const vc = {\n        ...parsed,\n        [requestState.presentation_definition.input_descriptors[0].schema.uri[0]]: {\n          vc: vcResponse.data.vc,\n          card: manifestState.display.card,\n        },\n      };\n      await AsyncStorage.setItem(\"@vc\", JSON.stringify(vc));\n    } else if (modeState === \"present\") {\n      const attestations = {\n        presentations: {\n          [requestState.presentation_definition.input_descriptors[0].schema.uri[0]]:\n            vcState.vc,\n        },\n      };\n      const payload = {\n        aud: requestState.redirect_uri,\n        nonce: requestState.nonce,\n        state: requestState.state,\n        attestations,\n      };\n      const selfIssuedIdToken = wallet.siop(payload);\n      await axios.post(\n        appendCorsAnywhere(Platform.OS,requestState.redirect_uri),\n        qs.stringify({id_token: selfIssuedIdToken, state: requestState.state}),\n        {\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        }\n      );\n    }\n    window.location.href = window.location.href.split(/[?#]/)[0];\n    navigation.navigate(\"Home\");\n  };\n\n  const authenticate = async (openIdConfigurationUri, client_id) => {\n    const openIdConfigurationResponse = await axios.get(openIdConfigurationUri);\n    const openIdConfiguration = openIdConfigurationResponse.data;\n    const redirect_uri = \"https://browser-wallet.azurewebsites.net/\";\n    const authorizationUri = `${openIdConfiguration.authorization_endpoint}&redirect_uri=${redirect_uri}&client_id=${client_id}&response_type=code&scope=openid`;\n    Linking.openURL(authorizationUri);\n  };\n\n  const CredentialsToBeIssued = () => {\n    return (\n      <Section>\n        <Credential\n          title={manifestState.display.card.title}\n          icon={manifestState.display.card.logo.uri}\n          issuedBy={manifestState.display.card.issuedBy}\n          textColor={manifestState.display.card.textColor}\n          backgroundColor={manifestState.display.card.backgroundColor}\n        />\n      </Section>\n    );\n  };\n\n  const IdTokensToBeSubmitted = () => {\n    const idToken = manifestState.input.attestations.idTokens[0];\n    const hostname = Linking.parse(idToken.configuration).hostname as string;\n    return (\n      <Card>\n        <Card.Title>Sign-in Required</Card.Title>\n        <Card.Divider />\n        <Button\n          type=\"outline\"\n          disabled={idTokenState !== \"\"}\n          title={hostname}\n          onPress={() => authenticate(idToken.configuration, idToken.client_id)}\n        />\n      </Card>\n    );\n  };\n\n  const CredentialsToBeSubmitted = () => {\n    return (\n      <Card>\n        <Card.Title>Credentials Required</Card.Title>\n        <Card.Divider />\n        <Credential\n          title={presentaionManifestState.display.card.title}\n          icon={presentaionManifestState.display.card.logo.uri}\n          issuedBy={presentaionManifestState.display.card.issuedBy}\n          textColor={presentaionManifestState.display.card.textColor}\n          backgroundColor={\n            presentaionManifestState.display.card.backgroundColor\n          }\n          size=\"40\"\n        />\n      </Card>\n    );\n  };\n\n  const home = () => {\n    window.location.href = window.location.href.split(/[?#]/)[0];\n    navigation.navigate(\"Home\");\n  };\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <Layout>\n        <Header\n          leftComponent={{ icon: \"chevron-left\", color: \"#fff\", onPress: home }}\n          centerComponent={{\n            text:\n              modeState === \"receive\"\n                ? \"Receive Credentials\"\n                : \"Present Credentials\",\n            style: { color: \"#fff\" },\n          }}\n        />\n\n        <Container>\n          <CredentialsToBeIssued />\n          <Divider />\n          {manifestState.input.attestations.idTokens && modeState!==\"present\" && (\n            <IdTokensToBeSubmitted />\n          )}\n          {presentaionManifestState && <CredentialsToBeSubmitted />}\n          <Button\n            style={tailwind(\"m-4 mt-8\")}\n            title=\"Submit\"\n            // disabled={idTokenState === \"\"}\n            onPress={submit}\n          />\n        </Container>\n      </Layout>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}