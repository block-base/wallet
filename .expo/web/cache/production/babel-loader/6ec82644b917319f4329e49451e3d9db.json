{"ast":null,"code":"'use strict';var inherits=require('inherits');var MD5=require('md5.js');var RIPEMD160=require('ripemd160');var sha=require('sha.js');var Base=require('cipher-base');function Hash(hash){Base.call(this,'digest');this._hash=hash;}inherits(Hash,Base);Hash.prototype._update=function(data){this._hash.update(data);};Hash.prototype._final=function(){return this._hash.digest();};module.exports=function createHash(alg){alg=alg.toLowerCase();if(alg==='md5')return new MD5();if(alg==='rmd160'||alg==='ripemd160')return new RIPEMD160();return new Hash(sha(alg));};","map":{"version":3,"sources":["/Users/naohirofujie/.anyenv/envs/nodenv/versions/14.5.0/lib/node_modules/expo-cli/node_modules/create-hash/browser.js"],"names":["inherits","require","MD5","RIPEMD160","sha","Base","Hash","hash","call","_hash","prototype","_update","data","update","_final","digest","module","exports","createHash","alg","toLowerCase"],"mappings":"AAAA,aACA,GAAIA,CAAAA,QAAQ,CAAGC,OAAO,CAAC,UAAD,CAAtB,CACA,GAAIC,CAAAA,GAAG,CAAGD,OAAO,CAAC,QAAD,CAAjB,CACA,GAAIE,CAAAA,SAAS,CAAGF,OAAO,CAAC,WAAD,CAAvB,CACA,GAAIG,CAAAA,GAAG,CAAGH,OAAO,CAAC,QAAD,CAAjB,CACA,GAAII,CAAAA,IAAI,CAAGJ,OAAO,CAAC,aAAD,CAAlB,CAEA,QAASK,CAAAA,IAAT,CAAeC,IAAf,CAAqB,CACnBF,IAAI,CAACG,IAAL,CAAU,IAAV,CAAgB,QAAhB,EAEA,KAAKC,KAAL,CAAaF,IAAb,CACD,CAEDP,QAAQ,CAACM,IAAD,CAAOD,IAAP,CAAR,CAEAC,IAAI,CAACI,SAAL,CAAeC,OAAf,CAAyB,SAAUC,IAAV,CAAgB,CACvC,KAAKH,KAAL,CAAWI,MAAX,CAAkBD,IAAlB,EACD,CAFD,CAIAN,IAAI,CAACI,SAAL,CAAeI,MAAf,CAAwB,UAAY,CAClC,MAAO,MAAKL,KAAL,CAAWM,MAAX,EAAP,CACD,CAFD,CAIAC,MAAM,CAACC,OAAP,CAAiB,QAASC,CAAAA,UAAT,CAAqBC,GAArB,CAA0B,CACzCA,GAAG,CAAGA,GAAG,CAACC,WAAJ,EAAN,CACA,GAAID,GAAG,GAAK,KAAZ,CAAmB,MAAO,IAAIjB,CAAAA,GAAJ,EAAP,CACnB,GAAIiB,GAAG,GAAK,QAAR,EAAoBA,GAAG,GAAK,WAAhC,CAA6C,MAAO,IAAIhB,CAAAA,SAAJ,EAAP,CAE7C,MAAO,IAAIG,CAAAA,IAAJ,CAASF,GAAG,CAACe,GAAD,CAAZ,CAAP,CACD,CAND","sourcesContent":["'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n"]},"metadata":{},"sourceType":"script"}