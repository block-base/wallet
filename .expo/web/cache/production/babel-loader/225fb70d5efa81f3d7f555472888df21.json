{"ast":null,"code":"'use strict';var BN=require('bn.js');var HmacDRBG=require('hmac-drbg');var utils=require(\"../utils\");var curves=require(\"../curves\");var rand=require('brorand');var assert=utils.assert;var KeyPair=require(\"./key\");var Signature=require(\"./signature\");function EC(options){if(!(this instanceof EC))return new EC(options);if(typeof options==='string'){assert(curves.hasOwnProperty(options),'Unknown curve '+options);options=curves[options];}if(options instanceof curves.PresetCurve)options={curve:options};this.curve=options.curve.curve;this.n=this.curve.n;this.nh=this.n.ushrn(1);this.g=this.curve.g;this.g=options.curve.g;this.g.precompute(options.curve.n.bitLength()+1);this.hash=options.hash||options.curve.hash;}module.exports=EC;EC.prototype.keyPair=function keyPair(options){return new KeyPair(this,options);};EC.prototype.keyFromPrivate=function keyFromPrivate(priv,enc){return KeyPair.fromPrivate(this,priv,enc);};EC.prototype.keyFromPublic=function keyFromPublic(pub,enc){return KeyPair.fromPublic(this,pub,enc);};EC.prototype.genKeyPair=function genKeyPair(options){if(!options)options={};var drbg=new HmacDRBG({hash:this.hash,pers:options.pers,persEnc:options.persEnc||'utf8',entropy:options.entropy||rand(this.hash.hmacStrength),entropyEnc:options.entropy&&options.entropyEnc||'utf8',nonce:this.n.toArray()});var bytes=this.n.byteLength();var ns2=this.n.sub(new BN(2));do{var priv=new BN(drbg.generate(bytes));if(priv.cmp(ns2)>0)continue;priv.iaddn(1);return this.keyFromPrivate(priv);}while(true);};EC.prototype._truncateToN=function truncateToN(msg,truncOnly){var delta=msg.byteLength()*8-this.n.bitLength();if(delta>0)msg=msg.ushrn(delta);if(!truncOnly&&msg.cmp(this.n)>=0)return msg.sub(this.n);else return msg;};EC.prototype.sign=function sign(msg,key,enc,options){if(typeof enc==='object'){options=enc;enc=null;}if(!options)options={};key=this.keyFromPrivate(key,enc);msg=this._truncateToN(new BN(msg,16));var bytes=this.n.byteLength();var bkey=key.getPrivate().toArray('be',bytes);var nonce=msg.toArray('be',bytes);var drbg=new HmacDRBG({hash:this.hash,entropy:bkey,nonce:nonce,pers:options.pers,persEnc:options.persEnc||'utf8'});var ns1=this.n.sub(new BN(1));for(var iter=0;true;iter++){var k=options.k?options.k(iter):new BN(drbg.generate(this.n.byteLength()));k=this._truncateToN(k,true);if(k.cmpn(1)<=0||k.cmp(ns1)>=0)continue;var kp=this.g.mul(k);if(kp.isInfinity())continue;var kpX=kp.getX();var r=kpX.umod(this.n);if(r.cmpn(0)===0)continue;var s=k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));s=s.umod(this.n);if(s.cmpn(0)===0)continue;var recoveryParam=(kp.getY().isOdd()?1:0)|(kpX.cmp(r)!==0?2:0);if(options.canonical&&s.cmp(this.nh)>0){s=this.n.sub(s);recoveryParam^=1;}return new Signature({r:r,s:s,recoveryParam:recoveryParam});}};EC.prototype.verify=function verify(msg,signature,key,enc){msg=this._truncateToN(new BN(msg,16));key=this.keyFromPublic(key,enc);signature=new Signature(signature,'hex');var r=signature.r;var s=signature.s;if(r.cmpn(1)<0||r.cmp(this.n)>=0)return false;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return false;var sinv=s.invm(this.n);var u1=sinv.mul(msg).umod(this.n);var u2=sinv.mul(r).umod(this.n);if(!this.curve._maxwellTrick){var p=this.g.mulAdd(u1,key.getPublic(),u2);if(p.isInfinity())return false;return p.getX().umod(this.n).cmp(r)===0;}var p=this.g.jmulAdd(u1,key.getPublic(),u2);if(p.isInfinity())return false;return p.eqXToP(r);};EC.prototype.recoverPubKey=function(msg,signature,j,enc){assert((3&j)===j,'The recovery param is more than two bits');signature=new Signature(signature,enc);var n=this.n;var e=new BN(msg);var r=signature.r;var s=signature.s;var isYOdd=j&1;var isSecondKey=j>>1;if(r.cmp(this.curve.p.umod(this.curve.n))>=0&&isSecondKey)throw new Error('Unable to find sencond key candinate');if(isSecondKey)r=this.curve.pointFromX(r.add(this.curve.n),isYOdd);else r=this.curve.pointFromX(r,isYOdd);var rInv=signature.r.invm(n);var s1=n.sub(e).mul(rInv).umod(n);var s2=s.mul(rInv).umod(n);return this.g.mulAdd(s1,r,s2);};EC.prototype.getKeyRecoveryParam=function(e,signature,Q,enc){signature=new Signature(signature,enc);if(signature.recoveryParam!==null)return signature.recoveryParam;for(var i=0;i<4;i++){var Qprime;try{Qprime=this.recoverPubKey(e,signature,i);}catch(e){continue;}if(Qprime.eq(Q))return i;}throw new Error('Unable to find valid recovery factor');};","map":{"version":3,"sources":["/Users/naohirofujie/.anyenv/envs/nodenv/versions/14.5.0/lib/node_modules/expo-cli/node_modules/elliptic/lib/elliptic/ec/index.js"],"names":["BN","require","HmacDRBG","utils","curves","rand","assert","KeyPair","Signature","EC","options","hasOwnProperty","PresetCurve","curve","n","nh","ushrn","g","precompute","bitLength","hash","module","exports","prototype","keyPair","keyFromPrivate","priv","enc","fromPrivate","keyFromPublic","pub","fromPublic","genKeyPair","drbg","pers","persEnc","entropy","hmacStrength","entropyEnc","nonce","toArray","bytes","byteLength","ns2","sub","generate","cmp","iaddn","_truncateToN","truncateToN","msg","truncOnly","delta","sign","key","bkey","getPrivate","ns1","iter","k","cmpn","kp","mul","isInfinity","kpX","getX","r","umod","s","invm","iadd","recoveryParam","getY","isOdd","canonical","verify","signature","sinv","u1","u2","_maxwellTrick","p","mulAdd","getPublic","jmulAdd","eqXToP","recoverPubKey","j","e","isYOdd","isSecondKey","Error","pointFromX","add","rInv","s1","s2","getKeyRecoveryParam","Q","i","Qprime","eq"],"mappings":"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","sourcesContent":["'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n"]},"metadata":{},"sourceType":"script"}