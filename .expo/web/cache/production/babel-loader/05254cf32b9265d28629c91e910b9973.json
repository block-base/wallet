{"ast":null,"code":"'use strict';var BN=require('bn.js');var utils=require(\"../utils\");var getNAF=utils.getNAF;var getJSF=utils.getJSF;var assert=utils.assert;function BaseCurve(type,conf){this.type=type;this.p=new BN(conf.p,16);this.red=conf.prime?BN.red(conf.prime):BN.mont(this.p);this.zero=new BN(0).toRed(this.red);this.one=new BN(1).toRed(this.red);this.two=new BN(2).toRed(this.red);this.n=conf.n&&new BN(conf.n,16);this.g=conf.g&&this.pointFromJSON(conf.g,conf.gRed);this._wnafT1=new Array(4);this._wnafT2=new Array(4);this._wnafT3=new Array(4);this._wnafT4=new Array(4);this._bitLength=this.n?this.n.bitLength():0;var adjustCount=this.n&&this.p.div(this.n);if(!adjustCount||adjustCount.cmpn(100)>0){this.redN=null;}else{this._maxwellTrick=true;this.redN=this.n.toRed(this.red);}}module.exports=BaseCurve;BaseCurve.prototype.point=function point(){throw new Error('Not implemented');};BaseCurve.prototype.validate=function validate(){throw new Error('Not implemented');};BaseCurve.prototype._fixedNafMul=function _fixedNafMul(p,k){assert(p.precomputed);var doubles=p._getDoubles();var naf=getNAF(k,1,this._bitLength);var I=(1<<doubles.step+1)-(doubles.step%2===0?2:1);I/=3;var repr=[];for(var j=0;j<naf.length;j+=doubles.step){var nafW=0;for(var k=j+doubles.step-1;k>=j;k--){nafW=(nafW<<1)+naf[k];}repr.push(nafW);}var a=this.jpoint(null,null,null);var b=this.jpoint(null,null,null);for(var i=I;i>0;i--){for(var j=0;j<repr.length;j++){var nafW=repr[j];if(nafW===i)b=b.mixedAdd(doubles.points[j]);else if(nafW===-i)b=b.mixedAdd(doubles.points[j].neg());}a=a.add(b);}return a.toP();};BaseCurve.prototype._wnafMul=function _wnafMul(p,k){var w=4;var nafPoints=p._getNAFPoints(w);w=nafPoints.wnd;var wnd=nafPoints.points;var naf=getNAF(k,w,this._bitLength);var acc=this.jpoint(null,null,null);for(var i=naf.length-1;i>=0;i--){for(var k=0;i>=0&&naf[i]===0;i--){k++;}if(i>=0)k++;acc=acc.dblp(k);if(i<0)break;var z=naf[i];assert(z!==0);if(p.type==='affine'){if(z>0)acc=acc.mixedAdd(wnd[z-1>>1]);else acc=acc.mixedAdd(wnd[-z-1>>1].neg());}else{if(z>0)acc=acc.add(wnd[z-1>>1]);else acc=acc.add(wnd[-z-1>>1].neg());}}return p.type==='affine'?acc.toP():acc;};BaseCurve.prototype._wnafMulAdd=function _wnafMulAdd(defW,points,coeffs,len,jacobianResult){var wndWidth=this._wnafT1;var wnd=this._wnafT2;var naf=this._wnafT3;var max=0;for(var i=0;i<len;i++){var p=points[i];var nafPoints=p._getNAFPoints(defW);wndWidth[i]=nafPoints.wnd;wnd[i]=nafPoints.points;}for(var i=len-1;i>=1;i-=2){var a=i-1;var b=i;if(wndWidth[a]!==1||wndWidth[b]!==1){naf[a]=getNAF(coeffs[a],wndWidth[a],this._bitLength);naf[b]=getNAF(coeffs[b],wndWidth[b],this._bitLength);max=Math.max(naf[a].length,max);max=Math.max(naf[b].length,max);continue;}var comb=[points[a],null,null,points[b]];if(points[a].y.cmp(points[b].y)===0){comb[1]=points[a].add(points[b]);comb[2]=points[a].toJ().mixedAdd(points[b].neg());}else if(points[a].y.cmp(points[b].y.redNeg())===0){comb[1]=points[a].toJ().mixedAdd(points[b]);comb[2]=points[a].add(points[b].neg());}else{comb[1]=points[a].toJ().mixedAdd(points[b]);comb[2]=points[a].toJ().mixedAdd(points[b].neg());}var index=[-3,-1,-5,-7,0,7,5,1,3];var jsf=getJSF(coeffs[a],coeffs[b]);max=Math.max(jsf[0].length,max);naf[a]=new Array(max);naf[b]=new Array(max);for(var j=0;j<max;j++){var ja=jsf[0][j]|0;var jb=jsf[1][j]|0;naf[a][j]=index[(ja+1)*3+(jb+1)];naf[b][j]=0;wnd[a]=comb;}}var acc=this.jpoint(null,null,null);var tmp=this._wnafT4;for(var i=max;i>=0;i--){var k=0;while(i>=0){var zero=true;for(var j=0;j<len;j++){tmp[j]=naf[j][i]|0;if(tmp[j]!==0)zero=false;}if(!zero)break;k++;i--;}if(i>=0)k++;acc=acc.dblp(k);if(i<0)break;for(var j=0;j<len;j++){var z=tmp[j];var p;if(z===0)continue;else if(z>0)p=wnd[j][z-1>>1];else if(z<0)p=wnd[j][-z-1>>1].neg();if(p.type==='affine')acc=acc.mixedAdd(p);else acc=acc.add(p);}}for(var i=0;i<len;i++){wnd[i]=null;}if(jacobianResult)return acc;else return acc.toP();};function BasePoint(curve,type){this.curve=curve;this.type=type;this.precomputed=null;}BaseCurve.BasePoint=BasePoint;BasePoint.prototype.eq=function eq(){throw new Error('Not implemented');};BasePoint.prototype.validate=function validate(){return this.curve.validate(this);};BaseCurve.prototype.decodePoint=function decodePoint(bytes,enc){bytes=utils.toArray(bytes,enc);var len=this.p.byteLength();if((bytes[0]===0x04||bytes[0]===0x06||bytes[0]===0x07)&&bytes.length-1===2*len){if(bytes[0]===0x06)assert(bytes[bytes.length-1]%2===0);else if(bytes[0]===0x07)assert(bytes[bytes.length-1]%2===1);var res=this.point(bytes.slice(1,1+len),bytes.slice(1+len,1+2*len));return res;}else if((bytes[0]===0x02||bytes[0]===0x03)&&bytes.length-1===len){return this.pointFromX(bytes.slice(1,1+len),bytes[0]===0x03);}throw new Error('Unknown point format');};BasePoint.prototype.encodeCompressed=function encodeCompressed(enc){return this.encode(enc,true);};BasePoint.prototype._encode=function _encode(compact){var len=this.curve.p.byteLength();var x=this.getX().toArray('be',len);if(compact)return[this.getY().isEven()?0x02:0x03].concat(x);return[0x04].concat(x,this.getY().toArray('be',len));};BasePoint.prototype.encode=function encode(enc,compact){return utils.encode(this._encode(compact),enc);};BasePoint.prototype.precompute=function precompute(power){if(this.precomputed)return this;var precomputed={doubles:null,naf:null,beta:null};precomputed.naf=this._getNAFPoints(8);precomputed.doubles=this._getDoubles(4,power);precomputed.beta=this._getBeta();this.precomputed=precomputed;return this;};BasePoint.prototype._hasDoubles=function _hasDoubles(k){if(!this.precomputed)return false;var doubles=this.precomputed.doubles;if(!doubles)return false;return doubles.points.length>=Math.ceil((k.bitLength()+1)/doubles.step);};BasePoint.prototype._getDoubles=function _getDoubles(step,power){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;var doubles=[this];var acc=this;for(var i=0;i<power;i+=step){for(var j=0;j<step;j++){acc=acc.dbl();}doubles.push(acc);}return{step:step,points:doubles};};BasePoint.prototype._getNAFPoints=function _getNAFPoints(wnd){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;var res=[this];var max=(1<<wnd)-1;var dbl=max===1?null:this.dbl();for(var i=1;i<max;i++){res[i]=res[i-1].add(dbl);}return{wnd:wnd,points:res};};BasePoint.prototype._getBeta=function _getBeta(){return null;};BasePoint.prototype.dblp=function dblp(k){var r=this;for(var i=0;i<k;i++){r=r.dbl();}return r;};","map":{"version":3,"sources":["/Users/naohirofujie/.anyenv/envs/nodenv/versions/14.5.0/lib/node_modules/expo-cli/node_modules/elliptic/lib/elliptic/curve/base.js"],"names":["BN","require","utils","getNAF","getJSF","assert","BaseCurve","type","conf","p","red","prime","mont","zero","toRed","one","two","n","g","pointFromJSON","gRed","_wnafT1","Array","_wnafT2","_wnafT3","_wnafT4","_bitLength","bitLength","adjustCount","div","cmpn","redN","_maxwellTrick","module","exports","prototype","point","Error","validate","_fixedNafMul","k","precomputed","doubles","_getDoubles","naf","I","step","repr","j","length","nafW","push","a","jpoint","b","i","mixedAdd","points","neg","add","toP","_wnafMul","w","nafPoints","_getNAFPoints","wnd","acc","dblp","z","_wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","max","Math","comb","y","cmp","toJ","redNeg","index","jsf","ja","jb","tmp","BasePoint","curve","eq","decodePoint","bytes","enc","toArray","byteLength","res","slice","pointFromX","encodeCompressed","encode","_encode","compact","x","getX","getY","isEven","concat","precompute","power","beta","_getBeta","_hasDoubles","ceil","dbl","r"],"mappings":"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","sourcesContent":["'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n"]},"metadata":{},"sourceType":"script"}