{"ast":null,"code":"var AuthCipher=require(\"./authCipher\");var Buffer=require('safe-buffer').Buffer;var MODES=require(\"./modes\");var StreamCipher=require(\"./streamCipher\");var Transform=require('cipher-base');var aes=require(\"./aes\");var ebtk=require('evp_bytestokey');var inherits=require('inherits');function Decipher(mode,key,iv){Transform.call(this);this._cache=new Splitter();this._last=void 0;this._cipher=new aes.AES(key);this._prev=Buffer.from(iv);this._mode=mode;this._autopadding=true;}inherits(Decipher,Transform);Decipher.prototype._update=function(data){this._cache.add(data);var chunk;var thing;var out=[];while(chunk=this._cache.get(this._autopadding)){thing=this._mode.decrypt(this,chunk);out.push(thing);}return Buffer.concat(out);};Decipher.prototype._final=function(){var chunk=this._cache.flush();if(this._autopadding){return unpad(this._mode.decrypt(this,chunk));}else if(chunk){throw new Error('data not multiple of block length');}};Decipher.prototype.setAutoPadding=function(setTo){this._autopadding=!!setTo;return this;};function Splitter(){this.cache=Buffer.allocUnsafe(0);}Splitter.prototype.add=function(data){this.cache=Buffer.concat([this.cache,data]);};Splitter.prototype.get=function(autoPadding){var out;if(autoPadding){if(this.cache.length>16){out=this.cache.slice(0,16);this.cache=this.cache.slice(16);return out;}}else{if(this.cache.length>=16){out=this.cache.slice(0,16);this.cache=this.cache.slice(16);return out;}}return null;};Splitter.prototype.flush=function(){if(this.cache.length)return this.cache;};function unpad(last){var padded=last[15];if(padded<1||padded>16){throw new Error('unable to decrypt data');}var i=-1;while(++i<padded){if(last[i+(16-padded)]!==padded){throw new Error('unable to decrypt data');}}if(padded===16)return;return last.slice(0,16-padded);}function createDecipheriv(suite,password,iv){var config=MODES[suite.toLowerCase()];if(!config)throw new TypeError('invalid suite type');if(typeof iv==='string')iv=Buffer.from(iv);if(config.mode!=='GCM'&&iv.length!==config.iv)throw new TypeError('invalid iv length '+iv.length);if(typeof password==='string')password=Buffer.from(password);if(password.length!==config.key/8)throw new TypeError('invalid key length '+password.length);if(config.type==='stream'){return new StreamCipher(config.module,password,iv,true);}else if(config.type==='auth'){return new AuthCipher(config.module,password,iv,true);}return new Decipher(config.module,password,iv);}function createDecipher(suite,password){var config=MODES[suite.toLowerCase()];if(!config)throw new TypeError('invalid suite type');var keys=ebtk(password,false,config.key,config.iv);return createDecipheriv(suite,keys.key,keys.iv);}exports.createDecipher=createDecipher;exports.createDecipheriv=createDecipheriv;","map":{"version":3,"sources":["/Users/naohirofujie/.anyenv/envs/nodenv/versions/14.5.0/lib/node_modules/expo-cli/node_modules/browserify-aes/decrypter.js"],"names":["AuthCipher","require","Buffer","MODES","StreamCipher","Transform","aes","ebtk","inherits","Decipher","mode","key","iv","call","_cache","Splitter","_last","_cipher","AES","_prev","from","_mode","_autopadding","prototype","_update","data","add","chunk","thing","out","get","decrypt","push","concat","_final","flush","unpad","Error","setAutoPadding","setTo","cache","allocUnsafe","autoPadding","length","slice","last","padded","i","createDecipheriv","suite","password","config","toLowerCase","TypeError","type","module","createDecipher","keys","exports"],"mappings":"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","sourcesContent":["var AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n"]},"metadata":{},"sourceType":"script"}