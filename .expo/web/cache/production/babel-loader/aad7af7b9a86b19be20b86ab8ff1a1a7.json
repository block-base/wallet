{"ast":null,"code":"var Buffer=require('safe-buffer').Buffer;var createHash=require('create-hash');var stream=require('readable-stream');var inherits=require('inherits');var sign=require(\"./sign\");var verify=require(\"./verify\");var algorithms=require(\"./algorithms.json\");Object.keys(algorithms).forEach(function(key){algorithms[key].id=Buffer.from(algorithms[key].id,'hex');algorithms[key.toLowerCase()]=algorithms[key];});function Sign(algorithm){stream.Writable.call(this);var data=algorithms[algorithm];if(!data)throw new Error('Unknown message digest');this._hashType=data.hash;this._hash=createHash(data.hash);this._tag=data.id;this._signType=data.sign;}inherits(Sign,stream.Writable);Sign.prototype._write=function _write(data,_,done){this._hash.update(data);done();};Sign.prototype.update=function update(data,enc){if(typeof data==='string')data=Buffer.from(data,enc);this._hash.update(data);return this;};Sign.prototype.sign=function signMethod(key,enc){this.end();var hash=this._hash.digest();var sig=sign(hash,key,this._hashType,this._signType,this._tag);return enc?sig.toString(enc):sig;};function Verify(algorithm){stream.Writable.call(this);var data=algorithms[algorithm];if(!data)throw new Error('Unknown message digest');this._hash=createHash(data.hash);this._tag=data.id;this._signType=data.sign;}inherits(Verify,stream.Writable);Verify.prototype._write=function _write(data,_,done){this._hash.update(data);done();};Verify.prototype.update=function update(data,enc){if(typeof data==='string')data=Buffer.from(data,enc);this._hash.update(data);return this;};Verify.prototype.verify=function verifyMethod(key,sig,enc){if(typeof sig==='string')sig=Buffer.from(sig,enc);this.end();var hash=this._hash.digest();return verify(sig,hash,key,this._signType,this._tag);};function createSign(algorithm){return new Sign(algorithm);}function createVerify(algorithm){return new Verify(algorithm);}module.exports={Sign:createSign,Verify:createVerify,createSign:createSign,createVerify:createVerify};","map":{"version":3,"sources":["/Users/naohirofujie/.anyenv/envs/nodenv/versions/14.5.0/lib/node_modules/expo-cli/node_modules/browserify-sign/browser/index.js"],"names":["Buffer","require","createHash","stream","inherits","sign","verify","algorithms","Object","keys","forEach","key","id","from","toLowerCase","Sign","algorithm","Writable","call","data","Error","_hashType","hash","_hash","_tag","_signType","prototype","_write","_","done","update","enc","signMethod","end","digest","sig","toString","Verify","verifyMethod","createSign","createVerify","module","exports"],"mappings":"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","sourcesContent":["var Buffer = require('safe-buffer').Buffer\nvar createHash = require('create-hash')\nvar stream = require('readable-stream')\nvar inherits = require('inherits')\nvar sign = require('./sign')\nvar verify = require('./verify')\n\nvar algorithms = require('./algorithms.json')\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex')\n  algorithms[key.toLowerCase()] = algorithms[key]\n})\n\nfunction Sign (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hashType = data.hash\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Sign, stream.Writable)\n\nSign.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nSign.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nSign.prototype.sign = function signMethod (key, enc) {\n  this.end()\n  var hash = this._hash.digest()\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag)\n\n  return enc ? sig.toString(enc) : sig\n}\n\nfunction Verify (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Verify, stream.Writable)\n\nVerify.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nVerify.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\n  if (typeof sig === 'string') sig = Buffer.from(sig, enc)\n\n  this.end()\n  var hash = this._hash.digest()\n  return verify(sig, hash, key, this._signType, this._tag)\n}\n\nfunction createSign (algorithm) {\n  return new Sign(algorithm)\n}\n\nfunction createVerify (algorithm) {\n  return new Verify(algorithm)\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n}\n"]},"metadata":{},"sourceType":"script"}