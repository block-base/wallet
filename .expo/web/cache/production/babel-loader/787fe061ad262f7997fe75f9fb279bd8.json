{"ast":null,"code":"var DES=require('browserify-des');var aes=require('browserify-aes/browser');var aesModes=require('browserify-aes/modes');var desModes=require('browserify-des/modes');var ebtk=require('evp_bytestokey');function createCipher(suite,password){suite=suite.toLowerCase();var keyLen,ivLen;if(aesModes[suite]){keyLen=aesModes[suite].key;ivLen=aesModes[suite].iv;}else if(desModes[suite]){keyLen=desModes[suite].key*8;ivLen=desModes[suite].iv;}else{throw new TypeError('invalid suite type');}var keys=ebtk(password,false,keyLen,ivLen);return createCipheriv(suite,keys.key,keys.iv);}function createDecipher(suite,password){suite=suite.toLowerCase();var keyLen,ivLen;if(aesModes[suite]){keyLen=aesModes[suite].key;ivLen=aesModes[suite].iv;}else if(desModes[suite]){keyLen=desModes[suite].key*8;ivLen=desModes[suite].iv;}else{throw new TypeError('invalid suite type');}var keys=ebtk(password,false,keyLen,ivLen);return createDecipheriv(suite,keys.key,keys.iv);}function createCipheriv(suite,key,iv){suite=suite.toLowerCase();if(aesModes[suite])return aes.createCipheriv(suite,key,iv);if(desModes[suite])return new DES({key:key,iv:iv,mode:suite});throw new TypeError('invalid suite type');}function createDecipheriv(suite,key,iv){suite=suite.toLowerCase();if(aesModes[suite])return aes.createDecipheriv(suite,key,iv);if(desModes[suite])return new DES({key:key,iv:iv,mode:suite,decrypt:true});throw new TypeError('invalid suite type');}function getCiphers(){return Object.keys(desModes).concat(aes.getCiphers());}exports.createCipher=exports.Cipher=createCipher;exports.createCipheriv=exports.Cipheriv=createCipheriv;exports.createDecipher=exports.Decipher=createDecipher;exports.createDecipheriv=exports.Decipheriv=createDecipheriv;exports.listCiphers=exports.getCiphers=getCiphers;","map":{"version":3,"sources":["/Users/naohirofujie/.anyenv/envs/nodenv/versions/14.5.0/lib/node_modules/expo-cli/node_modules/browserify-cipher/browser.js"],"names":["DES","require","aes","aesModes","desModes","ebtk","createCipher","suite","password","toLowerCase","keyLen","ivLen","key","iv","TypeError","keys","createCipheriv","createDecipher","createDecipheriv","mode","decrypt","getCiphers","Object","concat","exports","Cipher","Cipheriv","Decipher","Decipheriv","listCiphers"],"mappings":"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","sourcesContent":["var DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n"]},"metadata":{},"sourceType":"script"}