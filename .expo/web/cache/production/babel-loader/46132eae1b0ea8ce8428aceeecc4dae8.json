{"ast":null,"code":"import*as Linking from\"expo-linking\";import React from\"react\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import{Header}from\"react-native-elements\";import{BarCodeScanner}from\"expo-barcode-scanner\";import QrReader from\"react-qr-reader\";export default(function(_ref){var navigation=_ref.navigation;var handleBarCodeScannerScanned=function handleBarCodeScannerScanned(_ref2){var data=_ref2.data;console.log(data);};var handleQrReaderScanned=function handleQrReaderScanned(data){if(!data){return;}var _Linking$parse=Linking.parse(data),queryParams=_Linking$parse.queryParams;if(!queryParams){return;}window.location.href=window.location.href+\"?request_uri=\"+queryParams.request_uri;};var handleQrReaderError=function handleQrReaderError(err){console.log(err);};var home=function home(){navigation.navigate(\"Home\");};return React.createElement(React.Fragment,null,React.createElement(Header,{leftComponent:{icon:\"chevron-left\",color:\"#fff\",onPress:home},centerComponent:{text:\"Scan QR Code\",style:{color:\"#fff\"}},rightComponent:{icon:\"menu\",color:\"#fff\"}}),Platform.OS!==\"web\"?React.createElement(View,{style:{flex:1,flexDirection:\"column\",justifyContent:\"flex-end\"}},React.createElement(BarCodeScanner,{onBarCodeScanned:handleBarCodeScannerScanned,style:StyleSheet.absoluteFillObject})):React.createElement(QrReader,{onError:handleQrReaderError,onScan:handleQrReaderScanned}));});","map":{"version":3,"sources":["/Users/naohirofujie/Develop/MSVC/bbwallet/browser-wallet/wallet/screens/ScannerScreen.tsx"],"names":["Linking","React","Header","BarCodeScanner","QrReader","navigation","handleBarCodeScannerScanned","data","console","log","handleQrReaderScanned","parse","queryParams","window","location","href","request_uri","handleQrReaderError","err","home","navigate","icon","color","onPress","text","style","Platform","OS","flex","flexDirection","justifyContent","StyleSheet","absoluteFillObject"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,OAAZ,KAAyB,cAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,mLAEA,OAASC,MAAT,KAAuB,uBAAvB,CACA,OAASC,cAAT,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CAEA,eAAe,cAAoB,IAAjBC,CAAAA,UAAiB,MAAjBA,UAAiB,CACjC,GAAMC,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,OAAc,IAAXC,CAAAA,IAAW,OAAXA,IAAW,CAChDC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACD,CAFD,CAIA,GAAMG,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACH,IAAD,CAAU,CACtC,GAAI,CAACA,IAAL,CAAW,CACT,OACD,CAHqC,mBAIdP,OAAO,CAACW,KAAR,CAAcJ,IAAd,CAJc,CAI9BK,WAJ8B,gBAI9BA,WAJ8B,CAKtC,GAAI,CAACA,WAAL,CAAkB,CAChB,OACD,CACDC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAA0BF,MAAM,CAACC,QAAP,CAAgBC,IAA1C,iBAA8DH,WAAW,CAACI,WAA1E,CACD,CATD,CAWA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,GAAD,CAAS,CACnCV,OAAO,CAACC,GAAR,CAAYS,GAAZ,EACD,CAFD,CAIA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjBd,UAAU,CAACe,QAAX,CAAoB,MAApB,EACD,CAFD,CAIA,MACE,yCACE,oBAAC,MAAD,EACE,aAAa,CAAE,CAAEC,IAAI,CAAE,cAAR,CAAwBC,KAAK,CAAE,MAA/B,CAAuCC,OAAO,CAAEJ,IAAhD,CADjB,CAEE,eAAe,CAAE,CACfK,IAAI,CAAE,cADS,CAEfC,KAAK,CAAE,CAAEH,KAAK,CAAE,MAAT,CAFQ,CAFnB,CAME,cAAc,CAAE,CAAED,IAAI,CAAE,MAAR,CAAgBC,KAAK,CAAE,MAAvB,CANlB,EADF,CASGI,QAAQ,CAACC,EAAT,GAAgB,KAAhB,CACC,oBAAC,IAAD,EACE,KAAK,CAAE,CACLC,IAAI,CAAE,CADD,CAELC,aAAa,CAAE,QAFV,CAGLC,cAAc,CAAE,UAHX,CADT,EAOE,oBAAC,cAAD,EACE,gBAAgB,CAAExB,2BADpB,CAEE,KAAK,CAAEyB,UAAU,CAACC,kBAFpB,EAPF,CADD,CAcC,oBAAC,QAAD,EACE,OAAO,CAAEf,mBADX,CAEE,MAAM,CAAEP,qBAFV,EAvBJ,CADF,CA+BD,CAvDD","sourcesContent":["import * as Linking from \"expo-linking\";\nimport React from \"react\";\nimport { Text, View, StyleSheet, Button, Platform } from \"react-native\";\nimport { Header } from \"react-native-elements\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport QrReader from \"react-qr-reader\";\n\nexport default ({ navigation }) => {\n  const handleBarCodeScannerScanned = ({ data }) => {\n    console.log(data);\n  };\n\n  const handleQrReaderScanned = (data) => {\n    if (!data) {\n      return;\n    }\n    const { queryParams } = Linking.parse(data);\n    if (!queryParams) {\n      return;\n    }\n    window.location.href = `${window.location.href}?request_uri=${queryParams.request_uri}`;\n  };\n\n  const handleQrReaderError = (err) => {\n    console.log(err);\n  };\n\n  const home = () => {\n    navigation.navigate(\"Home\");\n  };\n\n  return (\n    <>\n      <Header\n        leftComponent={{ icon: \"chevron-left\", color: \"#fff\", onPress: home }}\n        centerComponent={{\n          text: \"Scan QR Code\",\n          style: { color: \"#fff\" },\n        }}\n        rightComponent={{ icon: \"menu\", color: \"#fff\" }}\n      />\n      {Platform.OS !== \"web\" ? (\n        <View\n          style={{\n            flex: 1,\n            flexDirection: \"column\",\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <BarCodeScanner\n            onBarCodeScanned={handleBarCodeScannerScanned}\n            style={StyleSheet.absoluteFillObject}\n          />\n        </View>\n      ) : (\n        <QrReader\n          onError={handleQrReaderError}\n          onScan={handleQrReaderScanned}\n        />\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}