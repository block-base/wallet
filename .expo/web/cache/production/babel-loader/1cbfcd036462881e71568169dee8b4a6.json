{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import*as Linking from\"expo-linking\";import*as React from\"react\";import{Card,Divider,Button,Header}from\"react-native-elements\";import AsyncStorage from\"@react-native-community/async-storage\";import Platform from\"react-native-web/dist/exports/Platform\";import axios from\"axios\";import tailwind from\"tailwind-rn\";import Container from\"../components/atoms/Container\";import Layout from\"../components/atoms/Layout\";import Section from\"../components/atoms/Section\";import Credential from\"../components/molecules/Credential\";import{WalletContext}from\"../contexts\";import{initializeResponse,appendCorsAnywhere}from\"../hooks\";var qs=require(\"querystring\");export default(function(_ref){var navigation=_ref.navigation;var wallet=React.useContext(WalletContext);var _initializeResponse=initializeResponse(),manifestState=_initializeResponse.manifestState,requestState=_initializeResponse.requestState,modeState=_initializeResponse.modeState,vcState=_initializeResponse.vcState,presentaionManifestState=_initializeResponse.presentaionManifestState,idTokenState=_initializeResponse.idTokenState;var isLoadingComplete=manifestState&&requestState&&modeState;var submit=function submit(){var attestations,payload,selfIssuedIdToken,vcResponse,original,parsed,vc,_attestations,_payload,_selfIssuedIdToken;return _regeneratorRuntime.async(function submit$(_context){while(1){switch(_context.prev=_context.next){case 0:if(manifestState.input.attestations.idTokens&&manifestState.input.attestations.presentations){attestations={idTokens:_defineProperty({},manifestState.input.attestations.idTokens[0].configuration,idTokenState),presentations:_defineProperty({},manifestState.input.attestations.presentations[0].credentialType,vcState.vc)};}else if(manifestState.input.attestations.idTokens&&!manifestState.input.attestations.presentations){attestations={idTokens:_defineProperty({},manifestState.input.attestations.idTokens[0].configuration,idTokenState)};}else if(!manifestState.input.attestations.idTokens&&manifestState.input.attestations.presentations){attestations={presentations:_defineProperty({},manifestState.input.attestations.presentations[0].credentialType,vcState.vc)};}if(!(modeState===\"receive\")){_context.next=16;break;}payload={aud:manifestState.input.credentialIssuer,contract:requestState.presentation_definition.input_descriptors[0].issuance[0].manifest,attestations:attestations};selfIssuedIdToken=wallet.siop(payload);_context.next=6;return _regeneratorRuntime.awrap(axios.post(manifestState.input.credentialIssuer,selfIssuedIdToken,{headers:{\"Content-Type\":\"text/plain\"}}));case 6:vcResponse=_context.sent;_context.next=9;return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@vc\"));case 9:original=_context.sent;if(original){parsed=JSON.parse(original);}vc=_objectSpread(_objectSpread({},parsed),{},_defineProperty({},requestState.presentation_definition.input_descriptors[0].schema.uri[0],{vc:vcResponse.data.vc,card:manifestState.display.card}));_context.next=14;return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@vc\",JSON.stringify(vc)));case 14:_context.next=22;break;case 16:if(!(modeState===\"present\")){_context.next=22;break;}_attestations={presentations:_defineProperty({},requestState.presentation_definition.input_descriptors[0].schema.uri[0],vcState.vc)};_payload={aud:requestState.redirect_uri,nonce:requestState.nonce,state:requestState.state,attestations:_attestations};_selfIssuedIdToken=wallet.siop(_payload);_context.next=22;return _regeneratorRuntime.awrap(axios.post(appendCorsAnywhere(Platform.OS,requestState.redirect_uri),qs.stringify({id_token:_selfIssuedIdToken,state:requestState.state}),{headers:{\"Content-Type\":\"application/x-www-form-urlencoded\"}}));case 22:window.location.href=window.location.href.split(/[?#]/)[0];navigation.navigate(\"Home\");case 24:case\"end\":return _context.stop();}}},null,null,null,Promise);};var authenticate=function authenticate(openIdConfigurationUri,client_id){var openIdConfigurationResponse,openIdConfiguration,redirect_uri,authorizationUri;return _regeneratorRuntime.async(function authenticate$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(axios.get(openIdConfigurationUri));case 2:openIdConfigurationResponse=_context2.sent;openIdConfiguration=openIdConfigurationResponse.data;redirect_uri=\"https://browser-wallet.azurewebsites.net/\";authorizationUri=openIdConfiguration.authorization_endpoint+\"&redirect_uri=\"+redirect_uri+\"&client_id=\"+client_id+\"&response_type=code&scope=openid\";Linking.openURL(authorizationUri);case 7:case\"end\":return _context2.stop();}}},null,null,null,Promise);};var CredentialsToBeIssued=function CredentialsToBeIssued(){return React.createElement(Section,null,React.createElement(Credential,{title:manifestState.display.card.title,icon:manifestState.display.card.logo.uri,issuedBy:manifestState.display.card.issuedBy,textColor:manifestState.display.card.textColor,backgroundColor:manifestState.display.card.backgroundColor}));};var IdTokensToBeSubmitted=function IdTokensToBeSubmitted(){var idToken=manifestState.input.attestations.idTokens[0];var hostname=Linking.parse(idToken.configuration).hostname;return React.createElement(Card,null,React.createElement(Card.Title,null,\"Sign-in Required\"),React.createElement(Card.Divider,null),React.createElement(Button,{type:\"outline\",disabled:idTokenState!==\"\",title:hostname,onPress:function onPress(){return authenticate(idToken.configuration,idToken.client_id);}}));};var CredentialsToBeSubmitted=function CredentialsToBeSubmitted(){return React.createElement(Card,null,React.createElement(Card.Title,null,\"Credentials Required\"),React.createElement(Card.Divider,null),React.createElement(Credential,{title:presentaionManifestState.display.card.title,icon:presentaionManifestState.display.card.logo.uri,issuedBy:presentaionManifestState.display.card.issuedBy,textColor:presentaionManifestState.display.card.textColor,backgroundColor:presentaionManifestState.display.card.backgroundColor,size:\"40\"}));};var home=function home(){window.location.href=window.location.href.split(/[?#]/)[0];navigation.navigate(\"Home\");};if(!isLoadingComplete){return null;}else{return React.createElement(Layout,null,React.createElement(Header,{leftComponent:{icon:\"chevron-left\",color:\"#fff\",onPress:home},centerComponent:{text:modeState===\"receive\"?\"Receive Credentials\":\"Present Credentials\",style:{color:\"#fff\"}}}),React.createElement(Container,null,React.createElement(CredentialsToBeIssued,null),React.createElement(Divider,null),manifestState.input.attestations.idTokens&&modeState!==\"present\"&&React.createElement(IdTokensToBeSubmitted,null),presentaionManifestState&&React.createElement(CredentialsToBeSubmitted,null),React.createElement(Button,{style:tailwind(\"m-4 mt-8\"),title:\"Submit\",onPress:submit})));}});","map":{"version":3,"sources":["/Users/naohirofujie/Develop/MSVC/bbwallet/browser-wallet/wallet/screens/ResponseScreen.tsx"],"names":["Linking","React","Card","Divider","Button","Header","AsyncStorage","axios","tailwind","Container","Layout","Section","Credential","WalletContext","initializeResponse","appendCorsAnywhere","qs","require","navigation","wallet","useContext","manifestState","requestState","modeState","vcState","presentaionManifestState","idTokenState","isLoadingComplete","submit","input","attestations","idTokens","presentations","configuration","credentialType","vc","payload","aud","credentialIssuer","contract","presentation_definition","input_descriptors","issuance","manifest","selfIssuedIdToken","siop","post","headers","vcResponse","getItem","original","parsed","JSON","parse","schema","uri","data","card","display","setItem","stringify","redirect_uri","nonce","state","Platform","OS","id_token","window","location","href","split","navigate","authenticate","openIdConfigurationUri","client_id","get","openIdConfigurationResponse","openIdConfiguration","authorizationUri","authorization_endpoint","openURL","CredentialsToBeIssued","title","logo","issuedBy","textColor","backgroundColor","IdTokensToBeSubmitted","idToken","hostname","CredentialsToBeSubmitted","home","icon","color","onPress","text","style"],"mappings":"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","sourcesContent":["import * as Linking from \"expo-linking\";\nimport * as React from \"react\";\nimport { Card, Divider, Button, Header } from \"react-native-elements\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { Platform } from \"react-native\";\n\nimport axios from \"axios\";\nimport tailwind from \"tailwind-rn\";\n\nimport Container from \"../components/atoms/Container\";\nimport Layout from \"../components/atoms/Layout\";\nimport Section from \"../components/atoms/Section\";\nimport Credential from \"../components/molecules/Credential\";\nimport { WalletContext } from \"../contexts\";\nimport { initializeResponse, appendCorsAnywhere } from \"../hooks\";\nimport { Wallet } from \"../modules\";\nconst qs = require(\"querystring\");\n\nexport default ({ navigation }) => {\n  const wallet = React.useContext(WalletContext) as Wallet;\n  const {\n    manifestState,\n    requestState,\n    modeState,\n    vcState,\n    presentaionManifestState,\n    idTokenState,\n  } = initializeResponse();\n\n  const isLoadingComplete = manifestState && requestState && modeState;\n\n  const submit = async () => {\n    let attestations;\n\n    if (\n      manifestState.input.attestations.idTokens &&\n      manifestState.input.attestations.presentations\n    ) {\n      attestations = {\n        idTokens: {\n          [manifestState.input.attestations.idTokens[0]\n            .configuration]: idTokenState,\n        },\n        presentations: {\n          [manifestState.input.attestations.presentations[0].credentialType]:\n            vcState.vc,\n        },\n      };\n    } else if (\n      manifestState.input.attestations.idTokens &&\n      !manifestState.input.attestations.presentations\n    ) {\n      attestations = {\n        idTokens: {\n          [manifestState.input.attestations.idTokens[0]\n            .configuration]: idTokenState,\n        },\n      };\n    } else if (\n      !manifestState.input.attestations.idTokens &&\n      manifestState.input.attestations.presentations\n    ) {\n      attestations = {\n        presentations: {\n          [manifestState.input.attestations.presentations[0].credentialType]:\n            vcState.vc,\n        },\n      };\n    }    \n\n    if(modeState === \"receive\"){\n      const payload = {\n        aud: manifestState.input.credentialIssuer,\n        contract:\n          requestState.presentation_definition.input_descriptors[0].issuance[0]\n            .manifest,\n        attestations,\n      };\n      const selfIssuedIdToken = wallet.siop(payload);\n      const vcResponse = await axios.post(\n        manifestState.input.credentialIssuer,\n        selfIssuedIdToken,\n        {\n          headers: { \"Content-Type\": \"text/plain\" },\n        }\n      );\n      const original = await AsyncStorage.getItem(\"@vc\");\n      let parsed;\n      if (original) {\n        parsed = JSON.parse(original);\n      }\n      const vc = {\n        ...parsed,\n        [requestState.presentation_definition.input_descriptors[0].schema.uri[0]]: {\n          vc: vcResponse.data.vc,\n          card: manifestState.display.card,\n        },\n      };\n      await AsyncStorage.setItem(\"@vc\", JSON.stringify(vc));\n    } else if (modeState === \"present\") {\n      const attestations = {\n        presentations: {\n          [requestState.presentation_definition.input_descriptors[0].schema.uri[0]]:\n            vcState.vc,\n        },\n      };\n      const payload = {\n        aud: requestState.redirect_uri,\n        nonce: requestState.nonce,\n        state: requestState.state,\n        attestations,\n      };\n      const selfIssuedIdToken = wallet.siop(payload);\n      await axios.post(\n        appendCorsAnywhere(Platform.OS,requestState.redirect_uri),\n        qs.stringify({id_token: selfIssuedIdToken, state: requestState.state}),\n        {\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        }\n      );\n    }\n    window.location.href = window.location.href.split(/[?#]/)[0];\n    navigation.navigate(\"Home\");\n  };\n\n  const authenticate = async (openIdConfigurationUri, client_id) => {\n    const openIdConfigurationResponse = await axios.get(openIdConfigurationUri);\n    const openIdConfiguration = openIdConfigurationResponse.data;\n    const redirect_uri = \"https://browser-wallet.azurewebsites.net/\";\n    const authorizationUri = `${openIdConfiguration.authorization_endpoint}&redirect_uri=${redirect_uri}&client_id=${client_id}&response_type=code&scope=openid`;\n    Linking.openURL(authorizationUri);\n  };\n\n  const CredentialsToBeIssued = () => {\n    return (\n      <Section>\n        <Credential\n          title={manifestState.display.card.title}\n          icon={manifestState.display.card.logo.uri}\n          issuedBy={manifestState.display.card.issuedBy}\n          textColor={manifestState.display.card.textColor}\n          backgroundColor={manifestState.display.card.backgroundColor}\n        />\n      </Section>\n    );\n  };\n\n  const IdTokensToBeSubmitted = () => {\n    const idToken = manifestState.input.attestations.idTokens[0];\n    const hostname = Linking.parse(idToken.configuration).hostname as string;\n    return (\n      <Card>\n        <Card.Title>Sign-in Required</Card.Title>\n        <Card.Divider />\n        <Button\n          type=\"outline\"\n          disabled={idTokenState !== \"\"}\n          title={hostname}\n          onPress={() => authenticate(idToken.configuration, idToken.client_id)}\n        />\n      </Card>\n    );\n  };\n\n  const CredentialsToBeSubmitted = () => {\n    return (\n      <Card>\n        <Card.Title>Credentials Required</Card.Title>\n        <Card.Divider />\n        <Credential\n          title={presentaionManifestState.display.card.title}\n          icon={presentaionManifestState.display.card.logo.uri}\n          issuedBy={presentaionManifestState.display.card.issuedBy}\n          textColor={presentaionManifestState.display.card.textColor}\n          backgroundColor={\n            presentaionManifestState.display.card.backgroundColor\n          }\n          size=\"40\"\n        />\n      </Card>\n    );\n  };\n\n  const home = () => {\n    window.location.href = window.location.href.split(/[?#]/)[0];\n    navigation.navigate(\"Home\");\n  };\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <Layout>\n        <Header\n          leftComponent={{ icon: \"chevron-left\", color: \"#fff\", onPress: home }}\n          centerComponent={{\n            text:\n              modeState === \"receive\"\n                ? \"Receive Credentials\"\n                : \"Present Credentials\",\n            style: { color: \"#fff\" },\n          }}\n        />\n\n        <Container>\n          <CredentialsToBeIssued />\n          <Divider />\n          {manifestState.input.attestations.idTokens && modeState!==\"present\" && (\n            <IdTokensToBeSubmitted />\n          )}\n          {presentaionManifestState && <CredentialsToBeSubmitted />}\n          <Button\n            style={tailwind(\"m-4 mt-8\")}\n            title=\"Submit\"\n            // disabled={idTokenState === \"\"}\n            onPress={submit}\n          />\n        </Container>\n      </Layout>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}