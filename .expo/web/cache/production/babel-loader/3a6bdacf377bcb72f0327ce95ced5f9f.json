{"ast":null,"code":"'use strict';var hash=require('hash.js');var utils=require('minimalistic-crypto-utils');var assert=require('minimalistic-assert');function HmacDRBG(options){if(!(this instanceof HmacDRBG))return new HmacDRBG(options);this.hash=options.hash;this.predResist=!!options.predResist;this.outLen=this.hash.outSize;this.minEntropy=options.minEntropy||this.hash.hmacStrength;this._reseed=null;this.reseedInterval=null;this.K=null;this.V=null;var entropy=utils.toArray(options.entropy,options.entropyEnc||'hex');var nonce=utils.toArray(options.nonce,options.nonceEnc||'hex');var pers=utils.toArray(options.pers,options.persEnc||'hex');assert(entropy.length>=this.minEntropy/8,'Not enough entropy. Minimum is: '+this.minEntropy+' bits');this._init(entropy,nonce,pers);}module.exports=HmacDRBG;HmacDRBG.prototype._init=function init(entropy,nonce,pers){var seed=entropy.concat(nonce).concat(pers);this.K=new Array(this.outLen/8);this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++){this.K[i]=0x00;this.V[i]=0x01;}this._update(seed);this._reseed=1;this.reseedInterval=0x1000000000000;};HmacDRBG.prototype._hmac=function hmac(){return new hash.hmac(this.hash,this.K);};HmacDRBG.prototype._update=function update(seed){var kmac=this._hmac().update(this.V).update([0x00]);if(seed)kmac=kmac.update(seed);this.K=kmac.digest();this.V=this._hmac().update(this.V).digest();if(!seed)return;this.K=this._hmac().update(this.V).update([0x01]).update(seed).digest();this.V=this._hmac().update(this.V).digest();};HmacDRBG.prototype.reseed=function reseed(entropy,entropyEnc,add,addEnc){if(typeof entropyEnc!=='string'){addEnc=add;add=entropyEnc;entropyEnc=null;}entropy=utils.toArray(entropy,entropyEnc);add=utils.toArray(add,addEnc);assert(entropy.length>=this.minEntropy/8,'Not enough entropy. Minimum is: '+this.minEntropy+' bits');this._update(entropy.concat(add||[]));this._reseed=1;};HmacDRBG.prototype.generate=function generate(len,enc,add,addEnc){if(this._reseed>this.reseedInterval)throw new Error('Reseed is required');if(typeof enc!=='string'){addEnc=add;add=enc;enc=null;}if(add){add=utils.toArray(add,addEnc||'hex');this._update(add);}var temp=[];while(temp.length<len){this.V=this._hmac().update(this.V).digest();temp=temp.concat(this.V);}var res=temp.slice(0,len);this._update(add);this._reseed++;return utils.encode(res,enc);};","map":{"version":3,"sources":["/Users/naohirofujie/.anyenv/envs/nodenv/versions/14.5.0/lib/node_modules/expo-cli/node_modules/hmac-drbg/lib/hmac-drbg.js"],"names":["hash","require","utils","assert","HmacDRBG","options","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","toArray","entropyEnc","nonce","nonceEnc","pers","persEnc","length","_init","module","exports","prototype","init","seed","concat","Array","i","_update","_hmac","hmac","update","kmac","digest","reseed","add","addEnc","generate","len","enc","Error","temp","res","slice","encode"],"mappings":"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","sourcesContent":["'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n"]},"metadata":{},"sourceType":"script"}